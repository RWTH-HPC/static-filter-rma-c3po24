stages:
- build
- test-minimal
- test

include:
  - '/utility/.gitlab/cluster/cluster-template.yml'

build-batch:
  extends:
    - .batch-tests-template
    - .cluster-tests-build
  variables:
    FAST_TESTS_ONLY: "OFF"
    SLURM_TIMELIMIT: "00:35:00"
    EXTENSIVE_SLURM_TIME: "00:90:00"
    ALL_FEATURE_TESTS: "OFF"
    CMAKE_EXTRA_FLAGS: "-DENABLE_COVERAGE=ON"

.run-minimal-batch:
  extends:
    - .batch-tests-template
  stage: test-minimal
  variables:
    MAKE_CHECK_TARGET: "check-minimal"
    SLURM_TIMELIMIT: "00:05:00"
    END_SINGLE_SLURM_JOB: "0"
    REPORT_COLL_DIR: $REPORT_COLL_DIR

run-batch:
  extends:
    - .batch-tests-template
  stage: test
  variables:
    END_SINGLE_SLURM_JOB: "1"
    SLURM_TIMELIMIT: "00:70:00"
    MAKE_CHECK_TARGET: "check"
    REPORT_COLL_DIR: $REPORT_COLL_DIR
  script:
    - !reference [.cluster-tests-template, before_script]
    - !reference [.cluster-run-only, script]
    - set -x
    - mkdir -p ${CI_PROJECT_DIR}/coverage
    - gcovr -r $MUST_SOURCE_DIR . --print-summary --xml=${CI_PROJECT_DIR}/cobertura.xml --json=${REPORT_COLL_DIR}/coverage/${CI_PIPELINE_ID}.json --html-details=${CI_PROJECT_DIR}/coverage/index.html -j${SRUN_CPUS_PER_TASK} --filter '.*modules' --filter '.*externals/GTI/modules' --exclude-directories '.*EuroMpi2011.*' --exclude-directories '.*IPDPS2012.*' --exclude-directories '.*PnMPI.*'
    - exit $EXIT_CODE
  coverage: '/^lines: (.*\%)/'
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ${CI_PROJECT_DIR}/cobertura.xml
    paths:
      - ${CI_PROJECT_DIR}/coverage/
