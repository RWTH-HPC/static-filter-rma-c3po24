<?xml version="1.0"?>

<!--
  Part of the MUST Project, under BSD-3-Clause License
 See https://hpc.rwth-aachen.de/must/LICENSE for license information.
  SPDX-License-Identifier: BSD-3-Clause
-->

<!DOCTYPE analysis-specification SYSTEM "@MUST_SPECIFICATION_DTD_PATH@/analysis-specification.dtd">
<analysis-specification path-to-libs="@CMAKE_INSTALL_PREFIX@/modules" include-path="" group-name="EuroMpi2011">
    <analyses>
        <analysis name="BarrierReduction" reduction="yes">
            <registered-name>BarrierReduction</registered-name>
            <module-name>libbarrierReduction</module-name>
            <header-name>I_BarrierReduction.h</header-name>
            <interface-type>I_BarrierReduction</interface-type>
            <is-global>0</is-global>
            <is-process-global>0</is-process-global>
            <dependencies>
            </dependencies>
            <analysis-function name="reduce">
                <analysis-argument order="0" type="unsigned long long" name="tMin">
                </analysis-argument>
                <analysis-argument order="1" type="unsigned long long" name="tMax" />
            </analysis-function>
        </analysis>
        <analysis name="EvaluateBarriers">
            <registered-name>EvaluateBarriers</registered-name>
            <module-name>libevaluateBarriers</module-name>
            <header-name>I_EvaluateBarriers.h</header-name>
            <interface-type>I_EvaluateBarriers</interface-type>
            <is-global>1</is-global>
            <is-process-global>0</is-process-global>
            <dependencies>
            </dependencies>
            <reductions>
                <analysis-depend>BarrierReduction</analysis-depend>
            </reductions>
            <analysis-function name="newBarrier">
                <analysis-argument order="0" type="unsigned long long" name="tMin">
                </analysis-argument>
                <analysis-argument order="1" type="unsigned long long" name="tMax" />
            </analysis-function>
        </analysis>
    </analyses>
    <operations>
        <operation return-type="unsigned long long" name="getTimeOfDay">
            <extra-headers>
                <header>BarrierReductionOp.h</header>
            </extra-headers>
            <operation-arguments>
            </operation-arguments>
            <source-template>
                unsigned long long RETURN; struct timeval t; gettimeofday(&amp;t, NULL); RETURN = t.tv_sec * 1000000 + t.tv_usec; 
            </source-template>
        </operation>
    </operations>
</analysis-specification>
