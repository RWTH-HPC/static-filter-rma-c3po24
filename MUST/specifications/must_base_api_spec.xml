<?xml version="1.0"?>

<!--
  Part of the MUST Project, under BSD-3-Clause License
 See https://hpc.rwth-aachen.de/must/LICENSE for license information.
  SPDX-License-Identifier: BSD-3-Clause
-->

<!DOCTYPE api-specification SYSTEM "@MUST_SPECIFICATION_DTD_PATH@/api-specification.dtd">
<api-specification unique-name="MUST_Base_API">
    <api-headers>
        <header>BaseApi.h</header>
    </api-headers>
    <functions>
        <function return-type="int" name="handleNewLocation" wrapp-everywhere="yes">
            <function-arguments>
                <function-argument order="0" name="pId" type="uint64_t" intent="in">
                </function-argument>
                <function-argument order="1" name="lId" type="uint64_t" intent="in">
                </function-argument>
                <function-array-argument order="2" name="callName" type="const char*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>callNameLen</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-argument order="3" name="callNameLen" type="int" intent="in" />
                <function-argument order="4" name="callptr" type="void*" intent="in" />
                <function-argument order="5" name="codeptr" type="void*" intent="in" />
                <function-array-argument order="6" name="fname" type="const char*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>fnameLen</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-argument order="7" name="fnameLen" type="size_t" intent="in" />
                <function-argument order="8" name="fbase" type="void*" intent="in" />
                @STACKTRACE_XML_PREFIX@ <function-argument order="9" name="numStackLevels" type="int" intent="in" />
                <function-argument order="10" name="stackInfosLength" type="int" intent="in" />
                <function-argument order="11" name="indicesLength" type="int" intent="in" />
                <function-array-argument order="12" name="infoIndices" type="int*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>indicesLength</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-array-argument order="13" name="stackInfos" type="char*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>stackInfosLength</call-arg-name>
                    </length-argument>
                </function-array-argument>
                @STACKTRACE_XML_SUFFIX@ 
            </function-arguments>
            <analyses>
                <analysis order="pre" name="LocationReduction:reduce" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>callName</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>callNameLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>callptr</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>codeptr</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>fname</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>fnameLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>fbase</call-arg-name>
                        </analysis-argument>
                        @STACKTRACE_XML_PREFIX@ <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>numStackLevels</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>stackInfosLength</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>indicesLength</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="12">
                            <call-arg-name>infoIndices</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="13">
                            <call-arg-name>stackInfos</call-arg-name>
                        </analysis-argument>
                        @STACKTRACE_XML_SUFFIX@ 
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="LocationAnalysis:registerLocation" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>callName</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>callNameLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>callptr</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>codeptr</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>fname</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>fnameLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>fbase</call-arg-name>
                        </analysis-argument>
                        @STACKTRACE_XML_PREFIX@ <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>numStackLevels</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>stackInfosLength</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>indicesLength</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="12">
                            <call-arg-name>infoIndices</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="13">
                            <call-arg-name>stackInfos</call-arg-name>
                        </analysis-argument>
                        @STACKTRACE_XML_SUFFIX@ 
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="TSan:registerBaseAddress" group="MUST_TSan_Annotations">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>fname</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>fbase</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
            </analyses>
            <operations>
            </operations>
        </function>
        <function return-type="int" name="passLocationAcross" wrapp-across="yes">
            <function-arguments>
                <function-argument order="0" name="pId" type="uint64_t" intent="in">
                </function-argument>
                <function-argument order="1" name="lId" type="uint64_t" intent="in">
                </function-argument>
                <function-array-argument order="2" name="callName" type="const char*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>callNameLen</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-argument order="3" name="callNameLen" type="int" intent="in" />
                <function-argument order="4" name="callptr" type="void*" intent="in" />
                <function-argument order="5" name="codeptr" type="void*" intent="in" />
                <function-array-argument order="6" name="fname" type="const char*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>fnameLen</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-argument order="7" name="fnameLen" type="size_t" intent="in" />
                <function-argument order="8" name="fbase" type="void*" intent="in" />
                @STACKTRACE_XML_PREFIX@ <function-argument order="9" name="numStackLevels" type="int" intent="in" />
                <function-argument order="10" name="stackInfosLength" type="int" intent="in" />
                <function-argument order="11" name="indicesLength" type="int" intent="in" />
                <function-array-argument order="12" name="infoIndices" type="int*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>indicesLength</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-array-argument order="13" name="stackInfos" type="char*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>stackInfosLength</call-arg-name>
                    </length-argument>
                </function-array-argument>
                @STACKTRACE_XML_SUFFIX@ 
            </function-arguments>
            <analyses>
                <analysis order="pre" name="LocationAnalysis:registerLocation" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>callName</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>callNameLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>callptr</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>codeptr</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>fname</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>fnameLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>fbase</call-arg-name>
                        </analysis-argument>
                        @STACKTRACE_XML_PREFIX@ <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>numStackLevels</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>stackInfosLength</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>indicesLength</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="12">
                            <call-arg-name>infoIndices</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="13">
                            <call-arg-name>stackInfos</call-arg-name>
                        </analysis-argument>
                        @STACKTRACE_XML_SUFFIX@ 
                    </analysis-arguments>
                </analysis>
            </analyses>
            <operations>
            </operations>
            <created-by>
                <by name="LocationAnalysis" group="MUST_Base" />
            </created-by>
        </function>
        <function return-type="int" name="handleNewMessage" wrapp-everywhere="yes">
            <function-arguments>
                <function-argument order="0" name="msgId" type="int" intent="in" />
                <function-argument order="1" name="hasLocation" type="int" intent="in" />
                <function-argument order="2" name="pId" type="uint64_t" intent="in" />
                <function-argument order="3" name="lId" type="uint64_t" intent="in" />
                <function-argument order="4" name="fileId" type="size_t" intent="in" />
                <function-argument order="5" name="msgType" type="int" intent="in" />
                <function-array-argument order="6" name="text" type="char*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>textLen</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-argument order="7" name="textLen" type="int" intent="in" />
                <function-argument order="8" name="numReferences" type="int" intent="in" />
                <function-array-argument order="9" name="refPIds" type="uint64_t*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>numReferences</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-array-argument order="10" name="refLIds" type="uint64_t*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>numReferences</call-arg-name>
                    </length-argument>
                </function-array-argument>
            </function-arguments>
            <analyses>
                <analysis order="pre" name="MessageReduction:reduce" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>hasLocation</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerStdOut:log" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>hasLocation</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerJson:log" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>hasLocation</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerHtml:log" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>hasLocation</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerDebugger:log" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>hasLocation</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerDdt:log" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>hasLocation</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerScoreP:log" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>hasLocation</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
            <analysis order="pre" name="MsgLoggerReproduce:log" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>hasLocation</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis></analyses>
            <operations>
            </operations>
        </function>
        <function return-type="int" name="handleNewMessageReduced" wrapp-everywhere="yes">
            <function-arguments>
                <function-argument order="0" name="msgId" type="int" intent="in" />
                <function-argument order="1" name="pId" type="uint64_t" intent="in" />
                <function-argument order="2" name="lId" type="uint64_t" intent="in" />
                <function-argument order="3" name="fileId" type="uint64_t" intent="in" />
                <function-argument order="4" name="startRank" type="int" intent="in" />
                <function-argument order="5" name="stride" type="int" intent="in" />
                <function-argument order="6" name="count" type="int" intent="in" />
                <function-argument order="7" name="msgType" type="int" intent="in" />
                <function-array-argument order="8" name="text" type="char*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>textLen</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-argument order="9" name="textLen" type="int" intent="in" />
                <function-argument order="10" name="numReferences" type="int" intent="in" />
                <function-array-argument order="11" name="refPIds" type="uint64_t*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>numReferences</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-array-argument order="12" name="refLIds" type="uint64_t*" intent="in">
                    <length-argument type="argument">
                        <call-arg-name>numReferences</call-arg-name>
                    </length-argument>
                </function-array-argument>
            </function-arguments>
            <analyses>
                <analysis order="pre" name="MessageReduction:reduceStrided" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>startRank</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>stride</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>count</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="12">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerStdOut:logStrided" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>startRank</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>stride</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>count</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="12">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerJson:logStrided" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>startRank</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>stride</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>count</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="12">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerHtml:logStrided" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>startRank</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>stride</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>count</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="12">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MsgLoggerDebugger:logStrided" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>startRank</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>stride</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>count</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="12">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <!-- IMPORTANT: as long as the below loggers do not support the reduction, they should not have mappings to the reduced
                                             format, as they will perceive redundant information otherwise.  -->
                <!-- <analysis order="pre" name="MsgLoggerDdt:logStrided" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>startRank</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>stride</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>count</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis> -->
    <!--     <analysis order="pre" name="MsgLoggerScoreP:logStrided" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>startRank</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>stride</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>count</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>-->
                <!--     <analysis order="pre" name="MsgLoggerReproduce:logStrided" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>msgId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>pId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>lId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>startRank</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>stride</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="5">
                            <call-arg-name>count</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="6">
                            <call-arg-name>msgType</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="7">
                            <call-arg-name>text</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="8">
                            <call-arg-name>textLen</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="9">
                            <call-arg-name>numReferences</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="10">
                            <call-arg-name>refPIds</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="11">
                            <call-arg-name>refLIds</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>-->
            </analyses>
            <operations>
            </operations>
        </function><function return-type="int" name="finalizeNotify" wrapp-everywhere="yes">
            <function-arguments>
            </function-arguments>
            <analyses>
                <analysis order="pre" name="FinalizeReduction:reduce" group="MUST_Base">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="BlockingState:notifyFinalize" group="MUST_Deadlock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="P2PMatch:printLostMessages" group="MUST_Deadlock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="LeakChecks:finalizeNotify" group="MUST_LeakChecks">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
            <analysis order="pre" name="FinalizeMust:notify" group="MUST_Base">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis></analyses>
            <operations>
            </operations>
        </function>
        <function return-type="int" name="finalizeMUST"
        	wrapp-everywhere="yes" is-finalizer="yes">
        	<function-arguments></function-arguments>
        	<analyses>
        		<analysis order="pre" name="DP2PMatch:printLostMessages" group="MUST_DistributedDeadlock">
                 <analysis-arguments>
                 </analysis-arguments>
            </analysis>
            <analysis order="pre" name="FinishNotify:finish" group="MUST_Base">
                 <analysis-arguments>
                 </analysis-arguments>
            </analysis>
        	</analyses>
        	<operations></operations>
        </function>
        <!-- Test event for downwards communication        <function return-type="int" name="testDownComm" wrapp-down="yes">
        	<function-arguments>
        		<function-argument order="pre" name="value" type="float"
        			intent="in">
        		</function-argument>
        	</function-arguments>
        	<analyses>
        		<analysis order="pre" name="LocationAnalysis:testDown" group="MUST_Base">
        			<analysis-arguments>
        				<analysis-argument type="mapped"
        					analysis-arg-order="0">
        					<call-arg-name>value</call-arg-name>
        				</analysis-argument></analysis-arguments>
        		</analysis></analyses>
        	<operations></operations>
        </function>-->

        <function name="changeMessageFile" return-type="void" callback="yes">
            <function-arguments>
                <function-argument name="fileId" type="size_t" intent="in" order="0" />
                <function-array-argument name="filename" type="const char*" intent="in" order="1">
                    <length-argument type="argument">
                        <call-arg-name>len</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-argument name="len" type="size_t" intent="in" order="2" />
            </function-arguments>
            <analyses>
                <analysis order="pre" name="MessageFileManager:changeMessageFile" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>filename</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>len</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
            </analyses>
            <operations />
        </function>

        <function name="openMessageFile" return-type="void" callback="yes" wrapp-everywhere="yes">
            <function-arguments>
                <function-argument name="fileId" type="size_t" intent="in" order="0" />
                <function-array-argument name="filename" type="const char*" intent="in" order="1">
                    <length-argument type="argument">
                        <call-arg-name>len</call-arg-name>
                    </length-argument>
                </function-array-argument>
                <function-argument name="len" type="size_t" intent="in" order="2" />
            </function-arguments>
            <analyses>
                <analysis order="pre" name="MsgLoggerHtml:openFile" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>filename</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>len</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MessageFileReduction:filter" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>filename</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>len</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
            </analyses>
            <operations />
        </function>
        <function name="closeMessageFile" return-type="void" callback="yes" wrapp-everywhere="yes">
            <function-arguments>
                <function-argument name="fileId" type="size_t" intent="in" order="0" />
            </function-arguments>
            <analyses>
                <analysis order="pre" name="MsgLoggerHtml:closeFile" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
                <analysis order="pre" name="MessageFileReduction:reduce" group="MUST_Base">
                    <analysis-arguments>
                        <analysis-argument type="mapped" analysis-arg-order="0">
                            <call-arg-name>fileId</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
            </analyses>
            <operations />
        </function>
    </functions>
</api-specification>
