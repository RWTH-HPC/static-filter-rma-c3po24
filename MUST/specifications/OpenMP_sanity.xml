<?xml version="1.0" encoding="UTF-8"?>

<!--
  Part of the MUST Project, under BSD-3-Clause License
 See https://hpc.rwth-aachen.de/must/LICENSE for license information.
  SPDX-License-Identifier: BSD-3-Clause
-->

<!DOCTYPE analysis-specification PUBLIC "must_base" "@MUST_SPECIFICATION_DTD_PATH@/analysis-specification.dtd">
<analysis-specification
    group-name="OpenMPsanity"
    include-path=""
    path-to-libs="@CMAKE_INSTALL_PREFIX@/modules"
    enabled="@SPEC_OMPT_FOUND@">
    <analyses>
        <analysis name="OpenMPsanity">
            <registered-name>OpenMPsanity</registered-name>
            <module-name>libOpenMPsanity</module-name>
            <header-name>I_OpenMPsanity.h</header-name>
            <interface-type>must::I_OpenMPsanity</interface-type>
            <is-global>0</is-global>
            <is-process-global>0</is-process-global>
            <dependencies>
                <analysis-depend group="MUST_Base">CreateMessage</analysis-depend>
            </dependencies>

            <analysis-function name="notifyThreadedMPI">
                <analysis-argument order="0" name="providedLevel" type="int"/>
            </analysis-function>

            <analysis-function name="notifyParallelBegin">
                <analysis-argument order="0" name="pId" type="MustParallelId"/>
                <analysis-argument order="1" name="lId" type="MustLocationId"/>
            </analysis-function>

            <analysis-function name="enterMPICall">
                <analysis-argument order="0" name="pId" type="MustParallelId"/>
                <analysis-argument order="1" name="lId" type="MustLocationId"/>
            </analysis-function>

            <analysis-function name="leaveMPICall">
                <analysis-argument order="0" name="pId" type="MustParallelId"/>
                <analysis-argument order="1" name="lId" type="MustLocationId"/>
            </analysis-function>
        </analysis>
    </analyses>
    <operations/>
</analysis-specification>
