int MPI_Allgather_init(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Allgatherv_init(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, const int* recvcounts {ARRAY_IN|OP:comm_size:comm}, const int* displs {ARRAY_IN|OP:comm_size:comm}, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Allreduce_init(const void* sendbuf {SINGLE_IN}, void* recvbuf {SINGLE_IN}, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Alltoall_init(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Alltoallv_init(const void* sendbuf {SINGLE_IN}, const int* sendcounts {ARRAY_IN|OP:comm_size:comm}, const int* sdispls {ARRAY_IN|OP:comm_size:comm}, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, const int* recvcounts {ARRAY_IN|OP:comm_size:comm}, const int* rdispls {ARRAY_IN|OP:comm_size:comm}, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Alltoallw_init(const void* sendbuf {SINGLE_IN}, const int* sendcounts {ARRAY_IN|OP:comm_size:comm}, const int* sdispls {ARRAY_IN|OP:comm_size:comm}, const MPI_Datatype* sendtypes {ARRAY_IN|OP:comm_size:comm}, void* recvbuf {SINGLE_IN}, const int* recvcounts {ARRAY_IN|OP:comm_size:comm}, const int* rdispls {ARRAY_IN|OP:comm_size:comm}, const MPI_Datatype* recvtypes {ARRAY_IN|OP:comm_size:comm}, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Barrier_init(MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Bcast_init(void* buffer {SINGLE_IN}, int count, MPI_Datatype datatype, int root, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Comm_create_from_group(MPI_Group group, const char* stringtag {SINGLE_IN}, MPI_Info info, MPI_Errhandler errhandler, MPI_Comm* newcomm {SINGLE_OUT});
int MPI_Comm_idup_with_info(MPI_Comm comm, MPI_Info info, MPI_Comm* newcomm {SINGLE_OUT}, MPI_Request* request {SINGLE_OUT});
int MPI_Exscan_init(const void* sendbuf {SINGLE_IN}, void* recvbuf {SINGLE_IN}, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Gather_init(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Gatherv_init(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, const int* recvcounts {ARRAY_IN|OP:comm_size:comm}, const int* displs {ARRAY_IN|OP:comm_size:comm}, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Group_from_session_pset(MPI_Session session, const char* pset_name {SINGLE_IN}, MPI_Group* newgroup {SINGLE_OUT});
int MPI_Info_get_string(MPI_Info info, const char* key {SINGLE_IN}, int* buflen {SINGLE_IO}, char* value {SINGLE_OUT}, int* flag {SINGLE_OUT});
int MPI_Intercomm_create_from_groups(MPI_Group local_group, int local_leader, MPI_Group remote_group, int remote_leader, const char* stringtag {SINGLE_IN}, MPI_Info info, MPI_Errhandler errhandler, MPI_Comm* newintercomm {SINGLE_OUT});
int MPI_Isendrecv(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, int dest, int sendtag, void* recvbuf {SINGLE_IN}, int recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Request* request {SINGLE_OUT});
int MPI_Isendrecv_replace(void* buf {SINGLE_IN}, int count, MPI_Datatype datatype, int dest, int sendtag, int source, int recvtag, MPI_Comm comm, MPI_Request* request {SINGLE_OUT});
int MPI_Neighbor_allgather_init(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Neighbor_allgatherv_init(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, const int* recvcounts {ARRAY_IN|OP:comm_size:comm}, const int* displs {ARRAY_IN|OP:comm_size:comm}, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Neighbor_alltoall_init(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Neighbor_alltoallv_init(const void* sendbuf {SINGLE_IN}, const int* sendcounts {ARRAY_IN|OP:comm_size:comm}, const int* sdispls {ARRAY_IN|OP:comm_size:comm}, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, const int* recvcounts {ARRAY_IN|OP:comm_size:comm}, const int* rdispls {ARRAY_IN|OP:comm_size:comm}, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Neighbor_alltoallw_init(const void* sendbuf {SINGLE_IN}, const int* sendcounts {ARRAY_IN|OP:comm_size:comm}, const MPI_Aint* sdispls {ARRAY_IN|OP:comm_size:comm}, const MPI_Datatype* sendtypes {ARRAY_IN|OP:comm_size:comm}, void* recvbuf {SINGLE_IN}, const int* recvcounts {ARRAY_IN|OP:comm_size:comm}, const MPI_Aint* rdispls {ARRAY_IN|OP:comm_size:comm}, const MPI_Datatype* recvtypes {ARRAY_IN|OP:comm_size:comm}, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Parrived(MPI_Request request, int partition, int* flag {SINGLE_OUT});
int MPI_Pready(int partition, MPI_Request request);
int MPI_Pready_list(int length, const int* array_of_partitions {ARRAY_IN|ARG:length}, MPI_Request request);
int MPI_Pready_range(int partition_low, int partition_high, MPI_Request request);
int MPI_Precv_init(void* buf {SINGLE_IN}, int partitions, MPI_Count count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Psend_init(const void* buf {SINGLE_IN}, int partitions, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Reduce_init(const void* sendbuf {SINGLE_IN}, void* recvbuf {SINGLE_IN}, int count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Reduce_scatter_block_init(const void* sendbuf {SINGLE_IN}, void* recvbuf {SINGLE_IN}, int recvcount, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Reduce_scatter_init(const void* sendbuf {SINGLE_IN}, void* recvbuf {SINGLE_IN}, const int* recvcounts {ARRAY_IN|OP:comm_size:comm}, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Scan_init(const void* sendbuf {SINGLE_IN}, void* recvbuf {SINGLE_IN}, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Scatter_init(const void* sendbuf {SINGLE_IN}, int sendcount, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Scatterv_init(const void* sendbuf {SINGLE_IN}, const int* sendcounts {ARRAY_IN|OP:comm_size:comm}, const int* displs {ARRAY_IN|OP:comm_size:comm}, MPI_Datatype sendtype, void* recvbuf {SINGLE_IN}, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request* request {SINGLE_OUT});
int MPI_Session_call_errhandler(MPI_Session session, int errorcode);
int MPI_Session_create_errhandler(MPI_Session_errhandler_function* session_errhandler_fn {SINGLE_IN}, MPI_Errhandler* errhandler {SINGLE_OUT});
int MPI_Session_finalize(MPI_Session* session {SINGLE_IO});
int MPI_Session_get_errhandler(MPI_Session session, MPI_Errhandler* errhandler {SINGLE_OUT});
int MPI_Session_get_info(MPI_Session session, MPI_Info* info_used {SINGLE_OUT});
int MPI_Session_get_nth_pset(MPI_Session session, MPI_Info info, int n, int* pset_len {SINGLE_IO}, char* pset_name {SINGLE_OUT});
int MPI_Session_get_num_psets(MPI_Session session, MPI_Info info, int* npset_names {SINGLE_OUT});
int MPI_Session_get_pset_info(MPI_Session session, const char* pset_name {SINGLE_IN}, MPI_Info* info {SINGLE_OUT});
int MPI_Session_init(MPI_Info info, MPI_Errhandler errhandler, MPI_Session* session {SINGLE_OUT});
int MPI_Session_set_errhandler(MPI_Session session, MPI_Errhandler errhandler);
