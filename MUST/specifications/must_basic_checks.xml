<?xml version="1.0" encoding="UTF-8"?>

<!--
  Part of the MUST Project, under BSD-3-Clause License
 See https://hpc.rwth-aachen.de/must/LICENSE for license information.
  SPDX-License-Identifier: BSD-3-Clause
-->

<!DOCTYPE analysis-specification PUBLIC "must_base" "@MUST_SPECIFICATION_DTD_PATH@/analysis-specification.dtd">
<analysis-specification group-name="MUST_BasicChecks" include-path="" path-to-libs="@CMAKE_INSTALL_PREFIX@/modules">
    <analyses>
        <analysis name="IntegerChecks">
            <registered-name>IntegerChecks</registered-name>
            <module-name>libintegerChecks</module-name>
            <header-name>I_IntegerChecks.h</header-name>
            <interface-type>I_IntegerChecks</interface-type>
            <is-global>0</is-global>
            <is-process-global>0</is-process-global>
            <dependencies>
                <analysis-depend group="MUST_Base">ParallelIdAnalysis</analysis-depend>
                <analysis-depend group="MUST_Base">CreateMessage</analysis-depend>
                <analysis-depend group="MUST_Base">ArgumentAnalysis</analysis-depend>
                <analysis-depend group="MUST_Resource">BaseConstants</analysis-depend>
            </dependencies>
            <analysis-function name="errorIfLessThanZero">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="errorIfZero">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="warningIfZero">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="warningIfNotOneOrZero">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="errorIfLessThanZeroArray">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
            <analysis-function name="warningIfZeroArray">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
            <analysis-function name="errorIfEntryIsGreaterOrEqualArray">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="int" name="size" />
                <analysis-argument order="5" type="int" name="border" />
            </analysis-function>
            <analysis-function name="warningIfNotOneOrZeroArray">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
            <analysis-function name="errorIfNegativNotProcNullAnySource">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="errorIfNegativNotProcNull">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="errorIfNotWithinRangeZeroAndLessTagUb">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="errorIfNotWithinRangeZeroAndLessTagUbAnyTag">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="warningIfIsHighButLessTagUb">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="errorIfNegativNotProcNullArray">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
            <analysis-function name="errorIfNegativProcNullAnySource">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="errorIfNegativNotUndefined">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="value" />
            </analysis-function>
            <analysis-function name="errorIfDuplicateRank">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
            <analysis-function name="checkGroupRangeArray">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
        </analysis>
        <analysis name="BasicIntegrities" local-integrity="yes">
            <registered-name>BasicIntegrities</registered-name>
            <module-name>libbasicIntegrities</module-name>
            <header-name>I_BasicIntegrities.h</header-name>
            <interface-type>I_BasicIntegrities</interface-type>
            <is-global>0</is-global>
            <is-process-global>0</is-process-global>
            <dependencies>
                <analysis-depend group="MUST_Base">ParallelIdAnalysis</analysis-depend>
                <analysis-depend group="MUST_Base">CreateMessage</analysis-depend>
                <analysis-depend group="MUST_Base">ArgumentAnalysis</analysis-depend>
                <analysis-depend group="MUST_Resource">BaseConstants</analysis-depend>
                <analysis-depend group="MUST_Resource">CommTrack</analysis-depend>
            </dependencies>
            <analysis-function name="errorIfNullCondition">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="size" />
                <analysis-argument order="4" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="errorIfNull">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="errorIfNullAndNotMpiBottom">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="size" />
                <analysis-argument order="4" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="errorIfNullCommSize">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@COMM_F_TYPE@" name="comm" />
                <analysis-argument order="4" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="errorIfNullAndNotMpiBottomConditionCommSize">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="@COMM_F_TYPE@" name="comm" />
                <analysis-argument order="5" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="warningForLowThreadlevel">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="required" />
                <analysis-argument order="3" type="int" name="provided" />
            </analysis-function>
            <analysis-function name="warningForLowThreadlevelNoArgs">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
            </analysis-function>
            <analysis-function name="warningIfNull">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="errorIfNullAndNotMpiBottomAtIndexCommSize">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="@COMM_F_TYPE@" name="comm" />
                <analysis-argument order="5" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="errorIfNullStatus">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="errorIfNullStatuses">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="errorIfNullStatusesCondition">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="size" />
                <analysis-argument order="4" type="void*" name="pointer" />
            </analysis-function>
            <analysis-function name="errorIfNullOnlyOnRoot">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="void*" name="pointer" />
                <analysis-argument order="4" type="int" name="root" />
                <analysis-argument order="5" type="@COMM_F_TYPE@" name="comm" />
            </analysis-function>
            <analysis-function name="errorIfNullAndNotMpiBottomOnlyOnRoot">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int" name="size" />
                <analysis-argument order="4" type="void*" name="pointer" />
                <analysis-argument order="5" type="int" name="root" />
                <analysis-argument order="6" type="@COMM_F_TYPE@" name="comm" />
            </analysis-function>
            <analysis-function name="errorIfNullAndNotMpiBottomConditionCommSizeOnlyOnRoot">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="int*" name="array" />
                <analysis-argument order="4" type="@COMM_F_TYPE@" name="comm" />
                <analysis-argument order="5" type="void*" name="pointer" />
                <analysis-argument order="6" type="int" name="root" />
            </analysis-function>
            <analysis-function name="errorIfNullCommSizeOnlyOnRoot">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@COMM_F_TYPE@" name="comm" />
                <analysis-argument order="4" type="void*" name="pointer" />
                <analysis-argument order="5" type="int" name="root" />
            </analysis-function>
        </analysis>
        <analysis name="OperationChecks">
            <registered-name>OperationChecks</registered-name>
            <module-name>liboperationChecks</module-name>
            <header-name>I_OperationChecks.h</header-name>
            <interface-type>I_OperationChecks</interface-type>
            <is-global>0</is-global>
            <is-process-global>0</is-process-global>
            <dependencies>
                <analysis-depend group="MUST_Base">ParallelIdAnalysis</analysis-depend>
                <analysis-depend group="MUST_Base">CreateMessage</analysis-depend>
                <analysis-depend group="MUST_Base">ArgumentAnalysis</analysis-depend>
                <analysis-depend group="MUST_Resource">OpTrack</analysis-depend>
            </dependencies>
            <analysis-function name="errorIfPredefined">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@OP_F_TYPE@" name="op" />
            </analysis-function>
            <analysis-function name="errorIfNotKnown">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@OP_F_TYPE@" name="op" />
            </analysis-function>
            <analysis-function name="errorIfNull">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@OP_F_TYPE@" name="op" />
            </analysis-function>
        </analysis>
    </analyses>
    <operations>
    </operations>
</analysis-specification>
