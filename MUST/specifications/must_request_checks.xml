<?xml version="1.0" encoding="UTF-8"?>

<!--
  Part of the MUST Project, under BSD-3-Clause License
 See https://hpc.rwth-aachen.de/must/LICENSE for license information.
  SPDX-License-Identifier: BSD-3-Clause
-->

<!DOCTYPE analysis-specification PUBLIC "must_base" "@MUST_SPECIFICATION_DTD_PATH@/analysis-specification.dtd">
<analysis-specification group-name="MUST_RequestChecks" include-path="" path-to-libs="@CMAKE_INSTALL_PREFIX@/modules">
    <analyses>
        <analysis name="RequestChecks">
            <registered-name>RequestChecks</registered-name>
            <module-name>librequestChecks</module-name>
            <header-name>I_RequestChecks.h</header-name>
            <interface-type>I_RequestChecks</interface-type>
            <is-global>0</is-global>
            <is-process-global>0</is-process-global>
            <dependencies>
                <analysis-depend group="MUST_Base">ParallelIdAnalysis</analysis-depend>
                <analysis-depend group="MUST_Base">CreateMessage</analysis-depend>
                <analysis-depend group="MUST_Base">ArgumentAnalysis</analysis-depend>
                <analysis-depend group="MUST_Resource">RequestTrack</analysis-depend>
            </dependencies>
            <analysis-function name="errorIfNotKnown">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@REQUEST_F_TYPE@" name="request" />
            </analysis-function>
            <analysis-function name="errorIfNull">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@REQUEST_F_TYPE@" name="request" />
            </analysis-function>
            <analysis-function name="warningIfNullOrInactive">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@REQUEST_F_TYPE@" name="request" />
            </analysis-function>
            <analysis-function name="errorIfNotKnownArray">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@REQUEST_F_TYPE@*" name="requests" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
            <analysis-function name="warningIfNullOrInactiveArray">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" />
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@REQUEST_F_TYPE@*" name="requests" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
            <analysis-function name="errorIfNullArray">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@REQUEST_F_TYPE@*" name="requests" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
            <analysis-function name="errorIfPersistentButInactive">
                <analysis-argument order="0" type="uint64_t" name="pId" />
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="int" name="aId" />
                <analysis-argument order="3" type="@REQUEST_F_TYPE@" name="request" />
            </analysis-function>
            <analysis-function name="warningIfCanceled">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="int" name="aId" >
                </analysis-argument>
                <analysis-argument order="3" type="@REQUEST_F_TYPE@" name="request" />
            </analysis-function>
            <analysis-function name="warningIfActiveRecv">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="int" name="aId" >
                </analysis-argument>
                <analysis-argument order="3" type="@REQUEST_F_TYPE@" name="request" />
            </analysis-function>
            <analysis-function name="errorIfActive">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="int" name="aId" >
                </analysis-argument>
                <analysis-argument order="3" type="@REQUEST_F_TYPE@" name="request" />
            </analysis-function>
            <analysis-function name="errorIfActiveArray">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="int" name="aId" >
                </analysis-argument>
                <analysis-argument order="3" type="@REQUEST_F_TYPE@*" name="requests" />
                <analysis-argument order="4" type="int" name="size" />
            </analysis-function>
            <analysis-function name="errorIfPartitionActive">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="@REQUEST_F_TYPE@" name="request" />
                <analysis-argument order="3" type="int" name="partition" />
            </analysis-function>
            <analysis-function name="errorIfPartitionActiveRange">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="@REQUEST_F_TYPE@" name="request" />
                <analysis-argument order="3" type="int" name="partition_low" />
                <analysis-argument order="4" type="int" name="partition_high" />
            </analysis-function>
            <analysis-function name="errorIfPartitionActiveList">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="@REQUEST_F_TYPE@" name="request" />
                <analysis-argument order="3" type="int" name="length" />
                <analysis-argument order="4" type="int[]" name="array_of_partitions"/>
            </analysis-function>
            <analysis-function name="errorIfPreadyListContainsDuplicates">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="@REQUEST_F_TYPE@" name="request" />
                <analysis-argument order="3" type="int" name="length" />
                <analysis-argument order="4" type="int[]" name="array_of_partitions"/>
            </analysis-function>
            <analysis-function name="errorIfListNotWithinRangeZeroAndPartitionCount">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="@REQUEST_F_TYPE@" name="request" />
                <analysis-argument order="3" type="int" name="length" />
                <analysis-argument order="4" type="int[]" name="array_of_partitions"/>
            </analysis-function>
            <analysis-function name="errorIfNotWithinRangeZeroAndPartitionCount">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="@REQUEST_F_TYPE@" name="request" />
                <analysis-argument order="3" type="int" name="partition" />
            </analysis-function>
            <analysis-function name="errorIfLbUbNotWithinRangeZeroAndPartitionCount">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="@REQUEST_F_TYPE@" name="request" />
                <analysis-argument order="3" type="int" name="partition_low" />
                <analysis-argument order="4" type="int" name="partition_high" />
            </analysis-function>
            <analysis-function name="errorIfNotPartitionedSendRequest">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="@REQUEST_F_TYPE@" name="request" />
            </analysis-function>
            <analysis-function name="errorIfNotPartitionedReceiveRequest">
                <analysis-argument order="0" type="uint64_t" name="pId" >
                </analysis-argument>
                <analysis-argument order="1" type="uint64_t" name="lId" >
                </analysis-argument>
                <analysis-argument order="2" type="@REQUEST_F_TYPE@" name="request" />
            </analysis-function>
        </analysis>
    </analyses>
    <operations>
    </operations>
</analysis-specification>
