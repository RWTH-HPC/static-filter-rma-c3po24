; ModuleID = '/tmp/ss540294/login23-2_223088/solve_subs-88542f.ll'
source_filename = "/tmp/ss540294/login23-2_223088/solve_subs-88542f.ll"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define void @matvec_sub_(ptr nocapture readonly %ablock, ptr nocapture readonly %avec, ptr nocapture %bvec) local_unnamed_addr #0 !dbg !5 {
L.entry:
  call void @llvm.dbg.declare(metadata ptr %ablock, metadata !15, metadata !DIExpression()), !dbg !18
  call void @llvm.dbg.declare(metadata ptr %avec, metadata !16, metadata !DIExpression()), !dbg !18
  call void @llvm.dbg.declare(metadata ptr %bvec, metadata !17, metadata !DIExpression()), !dbg !18
  %0 = load double, ptr %avec, align 8, !dbg !19, !tbaa !20
  %1 = getelementptr i8, ptr %avec, i64 8, !dbg !19
  %2 = load double, ptr %1, align 8, !dbg !19, !tbaa !20
  %3 = getelementptr i8, ptr %ablock, i64 40, !dbg !19
  %4 = getelementptr i8, ptr %avec, i64 16, !dbg !19
  %5 = load double, ptr %4, align 8, !dbg !19, !tbaa !20
  %6 = getelementptr i8, ptr %ablock, i64 80, !dbg !19
  %7 = getelementptr i8, ptr %avec, i64 24, !dbg !19
  %8 = load double, ptr %7, align 8, !dbg !19, !tbaa !20
  %9 = getelementptr i8, ptr %ablock, i64 120, !dbg !19
  %10 = getelementptr i8, ptr %avec, i64 32, !dbg !19
  %11 = load double, ptr %10, align 8, !dbg !19, !tbaa !20
  %12 = getelementptr i8, ptr %ablock, i64 160, !dbg !19
  %13 = load <2 x double>, ptr %bvec, align 8, !dbg !19, !tbaa !24
  %14 = load <2 x double>, ptr %ablock, align 8, !dbg !19, !tbaa !26
  %15 = insertelement <2 x double> poison, double %0, i64 0, !dbg !28
  %16 = shufflevector <2 x double> %15, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !28
  %17 = fmul <2 x double> %16, %14, !dbg !19
  %18 = fsub <2 x double> %13, %17, !dbg !19
  %19 = load <2 x double>, ptr %3, align 8, !dbg !19, !tbaa !26
  %20 = insertelement <2 x double> poison, double %2, i64 0, !dbg !28
  %21 = shufflevector <2 x double> %20, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !28
  %22 = fmul <2 x double> %21, %19, !dbg !19
  %23 = fsub <2 x double> %18, %22, !dbg !19
  %24 = load <2 x double>, ptr %6, align 8, !dbg !19, !tbaa !26
  %25 = insertelement <2 x double> poison, double %5, i64 0, !dbg !28
  %26 = shufflevector <2 x double> %25, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !28
  %27 = fmul <2 x double> %26, %24, !dbg !19
  %28 = fsub <2 x double> %23, %27, !dbg !19
  %29 = load <2 x double>, ptr %9, align 8, !dbg !19, !tbaa !26
  %30 = insertelement <2 x double> poison, double %8, i64 0, !dbg !28
  %31 = shufflevector <2 x double> %30, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !28
  %32 = fmul <2 x double> %31, %29, !dbg !19
  %33 = fsub <2 x double> %28, %32, !dbg !19
  %34 = load <2 x double>, ptr %12, align 8, !dbg !19, !tbaa !26
  %35 = insertelement <2 x double> poison, double %11, i64 0, !dbg !28
  %36 = shufflevector <2 x double> %35, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !28
  %37 = fmul <2 x double> %36, %34, !dbg !19
  %38 = fsub <2 x double> %33, %37, !dbg !19
  store <2 x double> %38, ptr %bvec, align 8, !dbg !19, !tbaa !24
  %39 = getelementptr i8, ptr %bvec, i64 16, !dbg !29
  %40 = getelementptr i8, ptr %ablock, i64 16, !dbg !29
  %41 = getelementptr i8, ptr %ablock, i64 56, !dbg !29
  %42 = getelementptr i8, ptr %ablock, i64 96, !dbg !29
  %43 = getelementptr i8, ptr %ablock, i64 136, !dbg !29
  %44 = getelementptr i8, ptr %ablock, i64 176, !dbg !29
  %45 = load <2 x double>, ptr %39, align 8, !dbg !29, !tbaa !24
  %46 = load <2 x double>, ptr %40, align 8, !dbg !29, !tbaa !26
  %47 = fmul <2 x double> %16, %46, !dbg !29
  %48 = fsub <2 x double> %45, %47, !dbg !29
  %49 = load <2 x double>, ptr %41, align 8, !dbg !29, !tbaa !26
  %50 = fmul <2 x double> %21, %49, !dbg !29
  %51 = fsub <2 x double> %48, %50, !dbg !29
  %52 = load <2 x double>, ptr %42, align 8, !dbg !29, !tbaa !26
  %53 = fmul <2 x double> %26, %52, !dbg !29
  %54 = fsub <2 x double> %51, %53, !dbg !29
  %55 = load <2 x double>, ptr %43, align 8, !dbg !29, !tbaa !26
  %56 = fmul <2 x double> %31, %55, !dbg !29
  %57 = fsub <2 x double> %54, %56, !dbg !29
  %58 = load <2 x double>, ptr %44, align 8, !dbg !29, !tbaa !26
  %59 = fmul <2 x double> %36, %58, !dbg !29
  %60 = fsub <2 x double> %57, %59, !dbg !29
  store <2 x double> %60, ptr %39, align 8, !dbg !29, !tbaa !24
  %61 = getelementptr i8, ptr %bvec, i64 32, !dbg !30
  %62 = load double, ptr %61, align 8, !dbg !30, !tbaa !24
  %63 = getelementptr i8, ptr %ablock, i64 32, !dbg !30
  %64 = load double, ptr %63, align 8, !dbg !30, !tbaa !26
  %65 = fmul double %0, %64, !dbg !30
  %66 = fsub double %62, %65, !dbg !30
  %67 = getelementptr i8, ptr %ablock, i64 72, !dbg !30
  %68 = load double, ptr %67, align 8, !dbg !30, !tbaa !26
  %69 = fmul double %2, %68, !dbg !30
  %70 = fsub double %66, %69, !dbg !30
  %71 = getelementptr i8, ptr %ablock, i64 112, !dbg !30
  %72 = load double, ptr %71, align 8, !dbg !30, !tbaa !26
  %73 = fmul double %5, %72, !dbg !30
  %74 = fsub double %70, %73, !dbg !30
  %75 = getelementptr i8, ptr %ablock, i64 152, !dbg !30
  %76 = load double, ptr %75, align 8, !dbg !30, !tbaa !26
  %77 = fmul double %8, %76, !dbg !30
  %78 = fsub double %74, %77, !dbg !30
  %79 = getelementptr i8, ptr %ablock, i64 192, !dbg !30
  %80 = load double, ptr %79, align 8, !dbg !30, !tbaa !26
  %81 = fmul double %11, %80, !dbg !30
  %82 = fsub double %78, %81, !dbg !30
  store double %82, ptr %61, align 8, !dbg !30, !tbaa !24
  ret void, !dbg !31
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define void @matmul_sub_(ptr nocapture readonly %ablock, ptr nocapture readonly %bblock, ptr nocapture %cblock) local_unnamed_addr #0 !dbg !32 {
L.entry:
  call void @llvm.dbg.declare(metadata ptr %ablock, metadata !34, metadata !DIExpression()), !dbg !37
  call void @llvm.dbg.declare(metadata ptr %bblock, metadata !35, metadata !DIExpression()), !dbg !37
  call void @llvm.dbg.declare(metadata ptr %cblock, metadata !36, metadata !DIExpression()), !dbg !37
  %0 = getelementptr i8, ptr %bblock, i64 8, !dbg !38
  %1 = getelementptr i8, ptr %ablock, i64 40, !dbg !38
  %2 = getelementptr i8, ptr %bblock, i64 16, !dbg !38
  %3 = getelementptr i8, ptr %ablock, i64 80, !dbg !38
  %4 = getelementptr i8, ptr %bblock, i64 24, !dbg !38
  %5 = getelementptr i8, ptr %ablock, i64 120, !dbg !38
  %6 = getelementptr i8, ptr %bblock, i64 32, !dbg !38
  %7 = getelementptr i8, ptr %ablock, i64 160, !dbg !38
  %8 = load <2 x double>, ptr %cblock, align 8, !dbg !38, !tbaa !39
  %9 = load <2 x double>, ptr %ablock, align 8, !dbg !38, !tbaa !43
  %10 = load <2 x double>, ptr %1, align 8, !dbg !38, !tbaa !43
  %11 = load <2 x double>, ptr %3, align 8, !dbg !38, !tbaa !43
  %12 = load <2 x double>, ptr %5, align 8, !dbg !38, !tbaa !43
  %13 = load <2 x double>, ptr %7, align 8, !dbg !38, !tbaa !43
  %14 = getelementptr i8, ptr %cblock, i64 16, !dbg !45
  %15 = getelementptr i8, ptr %ablock, i64 16, !dbg !45
  %16 = getelementptr i8, ptr %ablock, i64 56, !dbg !45
  %17 = getelementptr i8, ptr %ablock, i64 96, !dbg !45
  %18 = getelementptr i8, ptr %ablock, i64 136, !dbg !45
  %19 = getelementptr i8, ptr %ablock, i64 176, !dbg !45
  %20 = load <2 x double>, ptr %14, align 8, !dbg !45, !tbaa !39
  %21 = load <2 x double>, ptr %15, align 8, !dbg !45, !tbaa !43
  %22 = load <2 x double>, ptr %16, align 8, !dbg !45, !tbaa !43
  %23 = load <2 x double>, ptr %17, align 8, !dbg !45, !tbaa !43
  %24 = load <2 x double>, ptr %18, align 8, !dbg !45, !tbaa !43
  %25 = load <2 x double>, ptr %19, align 8, !dbg !45, !tbaa !43
  %26 = getelementptr i8, ptr %cblock, i64 32, !dbg !46
  %27 = getelementptr i8, ptr %ablock, i64 32, !dbg !46
  %28 = load double, ptr %27, align 8, !dbg !46, !tbaa !43
  %29 = getelementptr i8, ptr %ablock, i64 72, !dbg !46
  %30 = load double, ptr %29, align 8, !dbg !46, !tbaa !43
  %31 = getelementptr i8, ptr %ablock, i64 112, !dbg !46
  %32 = load double, ptr %31, align 8, !dbg !46, !tbaa !43
  %33 = getelementptr i8, ptr %ablock, i64 152, !dbg !46
  %34 = load double, ptr %33, align 8, !dbg !46, !tbaa !43
  %35 = getelementptr i8, ptr %ablock, i64 192, !dbg !46
  %36 = load double, ptr %35, align 8, !dbg !46, !tbaa !43
  %37 = getelementptr i8, ptr %bblock, i64 40, !dbg !47
  %38 = getelementptr i8, ptr %bblock, i64 48, !dbg !47
  %39 = getelementptr i8, ptr %bblock, i64 56, !dbg !47
  %40 = getelementptr i8, ptr %bblock, i64 64, !dbg !47
  %41 = getelementptr i8, ptr %bblock, i64 72, !dbg !47
  %42 = load double, ptr %bblock, align 8, !dbg !38, !tbaa !48
  %43 = load double, ptr %0, align 8, !dbg !38, !tbaa !48
  %44 = load double, ptr %2, align 8, !dbg !38, !tbaa !48
  %45 = load double, ptr %4, align 8, !dbg !38, !tbaa !48
  %46 = load double, ptr %6, align 8, !dbg !38, !tbaa !48
  %47 = insertelement <2 x double> poison, double %42, i64 0, !dbg !50
  %48 = shufflevector <2 x double> %47, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !50
  %49 = fmul <2 x double> %48, %9, !dbg !38
  %50 = fsub <2 x double> %8, %49, !dbg !38
  %51 = insertelement <2 x double> poison, double %43, i64 0, !dbg !50
  %52 = shufflevector <2 x double> %51, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !50
  %53 = fmul <2 x double> %52, %10, !dbg !38
  %54 = fsub <2 x double> %50, %53, !dbg !38
  %55 = insertelement <2 x double> poison, double %44, i64 0, !dbg !50
  %56 = shufflevector <2 x double> %55, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !50
  %57 = fmul <2 x double> %56, %11, !dbg !38
  %58 = fsub <2 x double> %54, %57, !dbg !38
  %59 = insertelement <2 x double> poison, double %45, i64 0, !dbg !50
  %60 = shufflevector <2 x double> %59, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !50
  %61 = fmul <2 x double> %60, %12, !dbg !38
  %62 = fsub <2 x double> %58, %61, !dbg !38
  %63 = insertelement <2 x double> poison, double %46, i64 0, !dbg !50
  %64 = shufflevector <2 x double> %63, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !50
  %65 = fmul <2 x double> %64, %13, !dbg !38
  %66 = fsub <2 x double> %62, %65, !dbg !38
  store <2 x double> %66, ptr %cblock, align 8, !dbg !38, !tbaa !39
  %67 = fmul <2 x double> %48, %21, !dbg !45
  %68 = fsub <2 x double> %20, %67, !dbg !45
  %69 = fmul <2 x double> %52, %22, !dbg !45
  %70 = fsub <2 x double> %68, %69, !dbg !45
  %71 = fmul <2 x double> %56, %23, !dbg !45
  %72 = fsub <2 x double> %70, %71, !dbg !45
  %73 = fmul <2 x double> %60, %24, !dbg !45
  %74 = fsub <2 x double> %72, %73, !dbg !45
  %75 = fmul <2 x double> %64, %25, !dbg !45
  %76 = fsub <2 x double> %74, %75, !dbg !45
  store <2 x double> %76, ptr %14, align 8, !dbg !45, !tbaa !39
  %77 = load <2 x double>, ptr %26, align 8, !dbg !46, !tbaa !39
  %78 = load double, ptr %37, align 8, !dbg !47, !tbaa !48
  %79 = insertelement <2 x double> poison, double %28, i64 0, !dbg !47
  %80 = shufflevector <2 x double> %79, <2 x double> %9, <2 x i32> <i32 0, i32 2>, !dbg !47
  %81 = insertelement <2 x double> %47, double %78, i64 1, !dbg !47
  %82 = fmul <2 x double> %80, %81, !dbg !46
  %83 = fsub <2 x double> %77, %82, !dbg !46
  %84 = load double, ptr %38, align 8, !dbg !47, !tbaa !48
  %85 = insertelement <2 x double> poison, double %30, i64 0, !dbg !47
  %86 = shufflevector <2 x double> %85, <2 x double> %10, <2 x i32> <i32 0, i32 2>, !dbg !47
  %87 = insertelement <2 x double> %51, double %84, i64 1, !dbg !47
  %88 = fmul <2 x double> %86, %87, !dbg !46
  %89 = fsub <2 x double> %83, %88, !dbg !46
  %90 = load double, ptr %39, align 8, !dbg !47, !tbaa !48
  %91 = insertelement <2 x double> poison, double %32, i64 0, !dbg !47
  %92 = shufflevector <2 x double> %91, <2 x double> %11, <2 x i32> <i32 0, i32 2>, !dbg !47
  %93 = insertelement <2 x double> %55, double %90, i64 1, !dbg !47
  %94 = fmul <2 x double> %92, %93, !dbg !46
  %95 = fsub <2 x double> %89, %94, !dbg !46
  %96 = load double, ptr %40, align 8, !dbg !47, !tbaa !48
  %97 = insertelement <2 x double> poison, double %34, i64 0, !dbg !47
  %98 = shufflevector <2 x double> %97, <2 x double> %12, <2 x i32> <i32 0, i32 2>, !dbg !47
  %99 = insertelement <2 x double> %59, double %96, i64 1, !dbg !47
  %100 = fmul <2 x double> %98, %99, !dbg !46
  %101 = fsub <2 x double> %95, %100, !dbg !46
  %102 = load double, ptr %41, align 8, !dbg !47, !tbaa !48
  %103 = insertelement <2 x double> poison, double %36, i64 0, !dbg !47
  %104 = shufflevector <2 x double> %103, <2 x double> %13, <2 x i32> <i32 0, i32 2>, !dbg !47
  %105 = insertelement <2 x double> %63, double %102, i64 1, !dbg !47
  %106 = fmul <2 x double> %104, %105, !dbg !46
  %107 = fsub <2 x double> %101, %106, !dbg !46
  store <2 x double> %107, ptr %26, align 8, !dbg !46, !tbaa !39
  %108 = getelementptr i8, ptr %cblock, i64 48, !dbg !51
  %109 = load <2 x double>, ptr %108, align 8, !dbg !51, !tbaa !39
  %110 = shufflevector <2 x double> %9, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !52
  %111 = shufflevector <2 x double> %110, <2 x double> %21, <2 x i32> <i32 0, i32 2>, !dbg !52
  %112 = insertelement <2 x double> poison, double %78, i64 0, !dbg !52
  %113 = shufflevector <2 x double> %112, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !52
  %114 = fmul <2 x double> %111, %113, !dbg !51
  %115 = fsub <2 x double> %109, %114, !dbg !51
  %116 = shufflevector <2 x double> %10, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !52
  %117 = shufflevector <2 x double> %116, <2 x double> %22, <2 x i32> <i32 0, i32 2>, !dbg !52
  %118 = insertelement <2 x double> poison, double %84, i64 0, !dbg !52
  %119 = shufflevector <2 x double> %118, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !52
  %120 = fmul <2 x double> %117, %119, !dbg !51
  %121 = fsub <2 x double> %115, %120, !dbg !51
  %122 = shufflevector <2 x double> %11, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !52
  %123 = shufflevector <2 x double> %122, <2 x double> %23, <2 x i32> <i32 0, i32 2>, !dbg !52
  %124 = insertelement <2 x double> poison, double %90, i64 0, !dbg !52
  %125 = shufflevector <2 x double> %124, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !52
  %126 = fmul <2 x double> %123, %125, !dbg !51
  %127 = fsub <2 x double> %121, %126, !dbg !51
  %128 = shufflevector <2 x double> %12, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !52
  %129 = shufflevector <2 x double> %128, <2 x double> %24, <2 x i32> <i32 0, i32 2>, !dbg !52
  %130 = insertelement <2 x double> poison, double %96, i64 0, !dbg !52
  %131 = shufflevector <2 x double> %130, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !52
  %132 = fmul <2 x double> %129, %131, !dbg !51
  %133 = fsub <2 x double> %127, %132, !dbg !51
  %134 = shufflevector <2 x double> %13, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !52
  %135 = shufflevector <2 x double> %134, <2 x double> %25, <2 x i32> <i32 0, i32 2>, !dbg !52
  %136 = insertelement <2 x double> poison, double %102, i64 0, !dbg !52
  %137 = shufflevector <2 x double> %136, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !52
  %138 = fmul <2 x double> %135, %137, !dbg !51
  %139 = fsub <2 x double> %133, %138, !dbg !51
  store <2 x double> %139, ptr %108, align 8, !dbg !51, !tbaa !39
  %140 = getelementptr i8, ptr %cblock, i64 64, !dbg !53
  %141 = load <2 x double>, ptr %140, align 8, !dbg !53, !tbaa !39
  %142 = shufflevector <2 x double> %21, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !54
  %143 = insertelement <2 x double> %142, double %28, i64 1, !dbg !54
  %144 = fmul <2 x double> %143, %113, !dbg !53
  %145 = fsub <2 x double> %141, %144, !dbg !53
  %146 = shufflevector <2 x double> %22, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !54
  %147 = insertelement <2 x double> %146, double %30, i64 1, !dbg !54
  %148 = fmul <2 x double> %147, %119, !dbg !53
  %149 = fsub <2 x double> %145, %148, !dbg !53
  %150 = shufflevector <2 x double> %23, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !54
  %151 = insertelement <2 x double> %150, double %32, i64 1, !dbg !54
  %152 = fmul <2 x double> %151, %125, !dbg !53
  %153 = fsub <2 x double> %149, %152, !dbg !53
  %154 = shufflevector <2 x double> %24, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !54
  %155 = insertelement <2 x double> %154, double %34, i64 1, !dbg !54
  %156 = fmul <2 x double> %155, %131, !dbg !53
  %157 = fsub <2 x double> %153, %156, !dbg !53
  %158 = shufflevector <2 x double> %25, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !54
  %159 = insertelement <2 x double> %158, double %36, i64 1, !dbg !54
  %160 = fmul <2 x double> %159, %137, !dbg !53
  %161 = fsub <2 x double> %157, %160, !dbg !53
  store <2 x double> %161, ptr %140, align 8, !dbg !53, !tbaa !39
  %162 = getelementptr i8, ptr %cblock, i64 80, !dbg !55
  %163 = getelementptr i8, ptr %bblock, i64 80, !dbg !55
  %164 = getelementptr i8, ptr %bblock, i64 88, !dbg !55
  %165 = getelementptr i8, ptr %bblock, i64 96, !dbg !55
  %166 = getelementptr i8, ptr %bblock, i64 104, !dbg !55
  %167 = getelementptr i8, ptr %bblock, i64 112, !dbg !55
  %168 = load <2 x double>, ptr %162, align 8, !dbg !55, !tbaa !39
  %169 = getelementptr i8, ptr %cblock, i64 96, !dbg !56
  %170 = load <2 x double>, ptr %169, align 8, !dbg !56, !tbaa !39
  %171 = getelementptr i8, ptr %cblock, i64 112, !dbg !57
  %172 = getelementptr i8, ptr %bblock, i64 120, !dbg !58
  %173 = getelementptr i8, ptr %bblock, i64 128, !dbg !58
  %174 = getelementptr i8, ptr %bblock, i64 136, !dbg !58
  %175 = getelementptr i8, ptr %bblock, i64 144, !dbg !58
  %176 = getelementptr i8, ptr %bblock, i64 152, !dbg !58
  %177 = load double, ptr %163, align 8, !dbg !55, !tbaa !48
  %178 = load double, ptr %164, align 8, !dbg !55, !tbaa !48
  %179 = load double, ptr %165, align 8, !dbg !55, !tbaa !48
  %180 = load double, ptr %166, align 8, !dbg !55, !tbaa !48
  %181 = load double, ptr %167, align 8, !dbg !55, !tbaa !48
  %182 = insertelement <2 x double> poison, double %177, i64 0, !dbg !59
  %183 = shufflevector <2 x double> %182, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !59
  %184 = fmul <2 x double> %9, %183, !dbg !55
  %185 = fsub <2 x double> %168, %184, !dbg !55
  %186 = insertelement <2 x double> poison, double %178, i64 0, !dbg !59
  %187 = shufflevector <2 x double> %186, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !59
  %188 = fmul <2 x double> %10, %187, !dbg !55
  %189 = fsub <2 x double> %185, %188, !dbg !55
  %190 = insertelement <2 x double> poison, double %179, i64 0, !dbg !59
  %191 = shufflevector <2 x double> %190, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !59
  %192 = fmul <2 x double> %11, %191, !dbg !55
  %193 = fsub <2 x double> %189, %192, !dbg !55
  %194 = insertelement <2 x double> poison, double %180, i64 0, !dbg !59
  %195 = shufflevector <2 x double> %194, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !59
  %196 = fmul <2 x double> %12, %195, !dbg !55
  %197 = fsub <2 x double> %193, %196, !dbg !55
  %198 = insertelement <2 x double> poison, double %181, i64 0, !dbg !59
  %199 = shufflevector <2 x double> %198, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !59
  %200 = fmul <2 x double> %13, %199, !dbg !55
  %201 = fsub <2 x double> %197, %200, !dbg !55
  store <2 x double> %201, ptr %162, align 8, !dbg !55, !tbaa !39
  %202 = fmul <2 x double> %21, %183, !dbg !56
  %203 = fsub <2 x double> %170, %202, !dbg !56
  %204 = fmul <2 x double> %22, %187, !dbg !56
  %205 = fsub <2 x double> %203, %204, !dbg !56
  %206 = fmul <2 x double> %23, %191, !dbg !56
  %207 = fsub <2 x double> %205, %206, !dbg !56
  %208 = fmul <2 x double> %24, %195, !dbg !56
  %209 = fsub <2 x double> %207, %208, !dbg !56
  %210 = fmul <2 x double> %25, %199, !dbg !56
  %211 = fsub <2 x double> %209, %210, !dbg !56
  store <2 x double> %211, ptr %169, align 8, !dbg !56, !tbaa !39
  %212 = load <2 x double>, ptr %171, align 8, !dbg !57, !tbaa !39
  %213 = load double, ptr %172, align 8, !dbg !58, !tbaa !48
  %214 = insertelement <2 x double> %182, double %213, i64 1, !dbg !58
  %215 = fmul <2 x double> %80, %214, !dbg !57
  %216 = fsub <2 x double> %212, %215, !dbg !57
  %217 = load double, ptr %173, align 8, !dbg !58, !tbaa !48
  %218 = insertelement <2 x double> %186, double %217, i64 1, !dbg !58
  %219 = fmul <2 x double> %86, %218, !dbg !57
  %220 = fsub <2 x double> %216, %219, !dbg !57
  %221 = load double, ptr %174, align 8, !dbg !58, !tbaa !48
  %222 = insertelement <2 x double> %190, double %221, i64 1, !dbg !58
  %223 = fmul <2 x double> %92, %222, !dbg !57
  %224 = fsub <2 x double> %220, %223, !dbg !57
  %225 = load double, ptr %175, align 8, !dbg !58, !tbaa !48
  %226 = insertelement <2 x double> %194, double %225, i64 1, !dbg !58
  %227 = fmul <2 x double> %98, %226, !dbg !57
  %228 = fsub <2 x double> %224, %227, !dbg !57
  %229 = load double, ptr %176, align 8, !dbg !58, !tbaa !48
  %230 = insertelement <2 x double> %198, double %229, i64 1, !dbg !58
  %231 = fmul <2 x double> %104, %230, !dbg !57
  %232 = fsub <2 x double> %228, %231, !dbg !57
  store <2 x double> %232, ptr %171, align 8, !dbg !57, !tbaa !39
  %233 = getelementptr i8, ptr %cblock, i64 128, !dbg !60
  %234 = load <2 x double>, ptr %233, align 8, !dbg !60, !tbaa !39
  %235 = insertelement <2 x double> poison, double %213, i64 0, !dbg !61
  %236 = shufflevector <2 x double> %235, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !61
  %237 = fmul <2 x double> %111, %236, !dbg !60
  %238 = fsub <2 x double> %234, %237, !dbg !60
  %239 = insertelement <2 x double> poison, double %217, i64 0, !dbg !61
  %240 = shufflevector <2 x double> %239, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !61
  %241 = fmul <2 x double> %117, %240, !dbg !60
  %242 = fsub <2 x double> %238, %241, !dbg !60
  %243 = insertelement <2 x double> poison, double %221, i64 0, !dbg !61
  %244 = shufflevector <2 x double> %243, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !61
  %245 = fmul <2 x double> %123, %244, !dbg !60
  %246 = fsub <2 x double> %242, %245, !dbg !60
  %247 = insertelement <2 x double> poison, double %225, i64 0, !dbg !61
  %248 = shufflevector <2 x double> %247, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !61
  %249 = fmul <2 x double> %129, %248, !dbg !60
  %250 = fsub <2 x double> %246, %249, !dbg !60
  %251 = insertelement <2 x double> poison, double %229, i64 0, !dbg !61
  %252 = shufflevector <2 x double> %251, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !61
  %253 = fmul <2 x double> %135, %252, !dbg !60
  %254 = fsub <2 x double> %250, %253, !dbg !60
  store <2 x double> %254, ptr %233, align 8, !dbg !60, !tbaa !39
  %255 = getelementptr i8, ptr %cblock, i64 144, !dbg !62
  %256 = load <2 x double>, ptr %255, align 8, !dbg !62, !tbaa !39
  %257 = fmul <2 x double> %143, %236, !dbg !62
  %258 = fsub <2 x double> %256, %257, !dbg !62
  %259 = fmul <2 x double> %147, %240, !dbg !62
  %260 = fsub <2 x double> %258, %259, !dbg !62
  %261 = fmul <2 x double> %151, %244, !dbg !62
  %262 = fsub <2 x double> %260, %261, !dbg !62
  %263 = fmul <2 x double> %155, %248, !dbg !62
  %264 = fsub <2 x double> %262, %263, !dbg !62
  %265 = fmul <2 x double> %159, %252, !dbg !62
  %266 = fsub <2 x double> %264, %265, !dbg !62
  store <2 x double> %266, ptr %255, align 8, !dbg !62, !tbaa !39
  %267 = getelementptr i8, ptr %cblock, i64 160, !dbg !63
  %268 = getelementptr i8, ptr %bblock, i64 160, !dbg !63
  %269 = load double, ptr %268, align 8, !dbg !63, !tbaa !48
  %270 = getelementptr i8, ptr %bblock, i64 168, !dbg !63
  %271 = load double, ptr %270, align 8, !dbg !63, !tbaa !48
  %272 = getelementptr i8, ptr %bblock, i64 176, !dbg !63
  %273 = load double, ptr %272, align 8, !dbg !63, !tbaa !48
  %274 = getelementptr i8, ptr %bblock, i64 184, !dbg !63
  %275 = load double, ptr %274, align 8, !dbg !63, !tbaa !48
  %276 = getelementptr i8, ptr %bblock, i64 192, !dbg !63
  %277 = load double, ptr %276, align 8, !dbg !63, !tbaa !48
  %278 = load <2 x double>, ptr %267, align 8, !dbg !63, !tbaa !39
  %279 = insertelement <2 x double> poison, double %269, i64 0, !dbg !64
  %280 = shufflevector <2 x double> %279, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !64
  %281 = fmul <2 x double> %9, %280, !dbg !63
  %282 = fsub <2 x double> %278, %281, !dbg !63
  %283 = insertelement <2 x double> poison, double %271, i64 0, !dbg !64
  %284 = shufflevector <2 x double> %283, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !64
  %285 = fmul <2 x double> %10, %284, !dbg !63
  %286 = fsub <2 x double> %282, %285, !dbg !63
  %287 = insertelement <2 x double> poison, double %273, i64 0, !dbg !64
  %288 = shufflevector <2 x double> %287, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !64
  %289 = fmul <2 x double> %11, %288, !dbg !63
  %290 = fsub <2 x double> %286, %289, !dbg !63
  %291 = insertelement <2 x double> poison, double %275, i64 0, !dbg !64
  %292 = shufflevector <2 x double> %291, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !64
  %293 = fmul <2 x double> %12, %292, !dbg !63
  %294 = fsub <2 x double> %290, %293, !dbg !63
  %295 = insertelement <2 x double> poison, double %277, i64 0, !dbg !64
  %296 = shufflevector <2 x double> %295, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !64
  %297 = fmul <2 x double> %13, %296, !dbg !63
  %298 = fsub <2 x double> %294, %297, !dbg !63
  store <2 x double> %298, ptr %267, align 8, !dbg !63, !tbaa !39
  %299 = getelementptr i8, ptr %cblock, i64 176, !dbg !65
  %300 = load <2 x double>, ptr %299, align 8, !dbg !65, !tbaa !39
  %301 = fmul <2 x double> %21, %280, !dbg !65
  %302 = fsub <2 x double> %300, %301, !dbg !65
  %303 = fmul <2 x double> %22, %284, !dbg !65
  %304 = fsub <2 x double> %302, %303, !dbg !65
  %305 = fmul <2 x double> %23, %288, !dbg !65
  %306 = fsub <2 x double> %304, %305, !dbg !65
  %307 = fmul <2 x double> %24, %292, !dbg !65
  %308 = fsub <2 x double> %306, %307, !dbg !65
  %309 = fmul <2 x double> %25, %296, !dbg !65
  %310 = fsub <2 x double> %308, %309, !dbg !65
  store <2 x double> %310, ptr %299, align 8, !dbg !65, !tbaa !39
  %311 = getelementptr i8, ptr %cblock, i64 192, !dbg !66
  %312 = load double, ptr %311, align 8, !dbg !66, !tbaa !39
  %313 = fmul double %28, %269, !dbg !66
  %314 = fsub double %312, %313, !dbg !66
  %315 = fmul double %30, %271, !dbg !66
  %316 = fsub double %314, %315, !dbg !66
  %317 = fmul double %32, %273, !dbg !66
  %318 = fsub double %316, %317, !dbg !66
  %319 = fmul double %34, %275, !dbg !66
  %320 = fsub double %318, %319, !dbg !66
  %321 = fmul double %36, %277, !dbg !66
  %322 = fsub double %320, %321, !dbg !66
  store double %322, ptr %311, align 8, !dbg !66, !tbaa !39
  ret void, !dbg !67
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define void @binvcrhs_(ptr %lhs, ptr %c, ptr nocapture %r) local_unnamed_addr #0 !dbg !68 {
L.entry:
  call void @llvm.dbg.declare(metadata ptr %lhs, metadata !72, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.declare(metadata ptr %c, metadata !73, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.declare(metadata ptr %r, metadata !74, metadata !DIExpression()), !dbg !75
  %0 = load double, ptr %lhs, align 8, !dbg !76, !tbaa !77
  %1 = fdiv double 1.000000e+00, %0, !dbg !76
  call void @llvm.dbg.value(metadata double %1, metadata !81, metadata !DIExpression()), !dbg !75
  %2 = getelementptr i8, ptr %lhs, i64 40, !dbg !82
  %3 = getelementptr i8, ptr %lhs, i64 80, !dbg !83
  %4 = getelementptr i8, ptr %lhs, i64 120, !dbg !84
  %5 = load double, ptr %4, align 8, !dbg !84, !tbaa !77
  %6 = fmul double %1, %5, !dbg !84
  %7 = getelementptr i8, ptr %lhs, i64 160, !dbg !85
  %8 = load double, ptr %7, align 8, !dbg !85, !tbaa !77
  %9 = fmul double %1, %8, !dbg !85
  %10 = load double, ptr %c, align 8, !dbg !86, !tbaa !87
  %11 = fmul double %1, %10, !dbg !86
  %12 = load double, ptr %r, align 8, !dbg !89, !tbaa !90
  %13 = fmul double %1, %12, !dbg !89
  %14 = getelementptr i8, ptr %lhs, i64 8, !dbg !92
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  %15 = getelementptr i8, ptr %lhs, i64 48, !dbg !94
  %16 = getelementptr i8, ptr %lhs, i64 88, !dbg !95
  %17 = load double, ptr %16, align 8, !dbg !95, !tbaa !77
  %18 = getelementptr i8, ptr %lhs, i64 128, !dbg !96
  %19 = load double, ptr %18, align 8, !dbg !96, !tbaa !77
  %20 = getelementptr i8, ptr %lhs, i64 168, !dbg !97
  %21 = load double, ptr %20, align 8, !dbg !97, !tbaa !77
  %22 = getelementptr i8, ptr %c, i64 8, !dbg !98
  %23 = getelementptr i8, ptr %c, i64 48, !dbg !99
  %24 = getelementptr i8, ptr %c, i64 88, !dbg !100
  %25 = getelementptr i8, ptr %c, i64 128, !dbg !101
  %26 = getelementptr i8, ptr %c, i64 168, !dbg !102
  %27 = load double, ptr %26, align 8, !dbg !102, !tbaa !87
  %28 = getelementptr i8, ptr %r, i64 8, !dbg !103
  %29 = load double, ptr %28, align 8, !dbg !103, !tbaa !90
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  %30 = load <2 x double>, ptr %14, align 8, !dbg !92, !tbaa !77
  %31 = extractelement <2 x double> %30, i64 0, !dbg !103
  %32 = fmul double %6, %31, !dbg !96
  %33 = fsub double %19, %32, !dbg !96
  %34 = fmul double %9, %31, !dbg !97
  %35 = fsub double %21, %34, !dbg !97
  %36 = fmul double %13, %31, !dbg !103
  %37 = fsub double %29, %36, !dbg !103
  %38 = load <2 x double>, ptr %15, align 8, !dbg !94, !tbaa !77
  %39 = getelementptr i8, ptr %lhs, i64 96, !dbg !104
  %40 = extractelement <2 x double> %30, i64 1, !dbg !105
  %41 = getelementptr i8, ptr %lhs, i64 136, !dbg !106
  %42 = load double, ptr %41, align 8, !dbg !106, !tbaa !77
  %43 = fmul double %6, %40, !dbg !106
  %44 = fsub double %42, %43, !dbg !106
  %45 = getelementptr i8, ptr %lhs, i64 176, !dbg !107
  %46 = load double, ptr %45, align 8, !dbg !107, !tbaa !77
  %47 = fmul double %9, %40, !dbg !107
  %48 = fsub double %46, %47, !dbg !107
  %49 = getelementptr i8, ptr %c, i64 16, !dbg !108
  %50 = getelementptr i8, ptr %c, i64 56, !dbg !109
  %51 = getelementptr i8, ptr %c, i64 96, !dbg !110
  %52 = getelementptr i8, ptr %c, i64 136, !dbg !111
  %53 = getelementptr i8, ptr %c, i64 176, !dbg !112
  %54 = load double, ptr %53, align 8, !dbg !112, !tbaa !87
  %55 = getelementptr i8, ptr %r, i64 16, !dbg !105
  %56 = load double, ptr %55, align 8, !dbg !105, !tbaa !90
  %57 = fmul double %13, %40, !dbg !105
  %58 = fsub double %56, %57, !dbg !105
  %59 = getelementptr i8, ptr %lhs, i64 24, !dbg !113
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  %60 = getelementptr i8, ptr %lhs, i64 64, !dbg !114
  %61 = getelementptr i8, ptr %lhs, i64 144, !dbg !115
  %62 = getelementptr i8, ptr %lhs, i64 184, !dbg !116
  %63 = load double, ptr %62, align 8, !dbg !116, !tbaa !77
  %64 = getelementptr i8, ptr %c, i64 24, !dbg !117
  %65 = getelementptr i8, ptr %c, i64 64, !dbg !118
  %66 = getelementptr i8, ptr %c, i64 104, !dbg !119
  %67 = getelementptr i8, ptr %c, i64 144, !dbg !120
  %68 = getelementptr i8, ptr %c, i64 184, !dbg !121
  %69 = load double, ptr %68, align 8, !dbg !121, !tbaa !87
  %70 = getelementptr i8, ptr %r, i64 24, !dbg !122
  %71 = load double, ptr %70, align 8, !dbg !122, !tbaa !90
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  %72 = load <2 x double>, ptr %59, align 8, !dbg !113, !tbaa !77
  %73 = extractelement <2 x double> %72, i64 0, !dbg !116
  %74 = fmul double %9, %73, !dbg !116
  %75 = fsub double %63, %74, !dbg !116
  %76 = fmul double %13, %73, !dbg !122
  %77 = fsub double %71, %76, !dbg !122
  %78 = load <2 x double>, ptr %60, align 8, !dbg !114, !tbaa !77
  %79 = getelementptr i8, ptr %lhs, i64 112, !dbg !123
  %80 = load double, ptr %79, align 8, !dbg !123, !tbaa !77
  %81 = getelementptr i8, ptr %lhs, i64 192, !dbg !124
  %82 = load double, ptr %81, align 8, !dbg !124, !tbaa !77
  %83 = extractelement <2 x double> %72, i64 1, !dbg !124
  %84 = fmul double %9, %83, !dbg !124
  %85 = fsub double %82, %84, !dbg !124
  %86 = getelementptr i8, ptr %c, i64 32, !dbg !125
  %87 = fmul double %11, %83, !dbg !125
  %88 = getelementptr i8, ptr %c, i64 72, !dbg !126
  %89 = getelementptr i8, ptr %c, i64 112, !dbg !127
  %90 = getelementptr i8, ptr %c, i64 152, !dbg !128
  %91 = getelementptr i8, ptr %c, i64 192, !dbg !129
  %92 = load double, ptr %91, align 8, !dbg !129, !tbaa !87
  %93 = getelementptr i8, ptr %r, i64 32, !dbg !130
  %94 = load double, ptr %93, align 8, !dbg !130, !tbaa !90
  %95 = fmul double %13, %83, !dbg !130
  %96 = fsub double %94, %95, !dbg !130
  call void @llvm.dbg.value(metadata double %118, metadata !81, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  %97 = load <2 x double>, ptr %39, align 8, !dbg !104, !tbaa !77
  %98 = shufflevector <2 x double> %30, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !131
  %99 = shufflevector <2 x double> %98, <2 x double> %72, <2 x i32> <i32 0, i32 2>, !dbg !131
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double %299, metadata !81, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double %293, metadata !93, metadata !DIExpression()), !dbg !75
  %100 = load double, ptr %2, align 8, !dbg !82, !tbaa !77
  %101 = load double, ptr %3, align 8, !dbg !83, !tbaa !77
  %102 = insertelement <2 x double> poison, double %1, i64 0, !dbg !82
  %103 = shufflevector <2 x double> %102, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !82
  %104 = insertelement <2 x double> poison, double %101, i64 0, !dbg !82
  %105 = insertelement <2 x double> %104, double %100, i64 1, !dbg !82
  %106 = fmul <2 x double> %103, %105, !dbg !83
  %107 = extractelement <2 x double> %106, i64 1, !dbg !132
  store double %107, ptr %2, align 8, !dbg !82, !tbaa !77
  %108 = extractelement <2 x double> %106, i64 0, !dbg !95
  %109 = fmul <2 x double> %106, %30, !dbg !95
  %110 = extractelement <2 x double> %109, i64 0, !dbg !95
  %111 = fsub double %17, %110, !dbg !95
  %112 = shufflevector <2 x double> %106, <2 x double> poison, <2 x i32> <i32 1, i32 1>, !dbg !133
  %113 = fmul <2 x double> %112, %30, !dbg !94
  %114 = fsub <2 x double> %38, %113, !dbg !94
  store <2 x double> %114, ptr %15, align 8, !dbg !94, !tbaa !77
  %115 = fmul <2 x double> %112, %72, !dbg !114
  %116 = fsub <2 x double> %78, %115, !dbg !114
  store <2 x double> %116, ptr %60, align 8, !dbg !114, !tbaa !77
  %117 = extractelement <2 x double> %114, i64 0, !dbg !134
  %118 = fdiv double 1.000000e+00, %117, !dbg !134
  %119 = fmul double %118, %33, !dbg !135
  %120 = shufflevector <2 x double> %72, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !136
  %121 = insertelement <2 x double> %120, double %119, i64 1, !dbg !136
  %122 = fmul <2 x double> %106, %121, !dbg !123
  %123 = insertelement <2 x double> poison, double %80, i64 0, !dbg !136
  %124 = insertelement <2 x double> %123, double %6, i64 1, !dbg !136
  %125 = fsub <2 x double> %124, %122, !dbg !123
  %126 = extractelement <2 x double> %114, i64 1, !dbg !137
  %127 = fmul double %119, %126, !dbg !138
  %128 = fsub double %44, %127, !dbg !138
  %129 = fmul <2 x double> %102, %105, !dbg !131
  %130 = shufflevector <2 x double> %129, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !131
  %131 = fmul <2 x double> %130, %99, !dbg !104
  %132 = fsub <2 x double> %97, %131, !dbg !104
  %133 = shufflevector <2 x double> %114, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !139
  %134 = shufflevector <2 x double> %133, <2 x double> %116, <2 x i32> <i32 0, i32 2>, !dbg !139
  %135 = extractelement <2 x double> %116, i64 0, !dbg !140
  %136 = extractelement <2 x double> %116, i64 1, !dbg !141
  %137 = shufflevector <2 x double> %116, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !142
  call void @llvm.dbg.value(metadata double %291, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  %138 = load <2 x double>, ptr %61, align 8, !dbg !115, !tbaa !77
  %139 = insertelement <2 x double> poison, double %6, i64 0, !dbg !143
  %140 = shufflevector <2 x double> %139, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !143
  %141 = fmul <2 x double> %140, %72, !dbg !115
  %142 = fsub <2 x double> %138, %141, !dbg !115
  %143 = insertelement <2 x double> poison, double %119, i64 0, !dbg !144
  %144 = shufflevector <2 x double> %143, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !144
  %145 = fmul <2 x double> %144, %116, !dbg !145
  %146 = fsub <2 x double> %142, %145, !dbg !145
  call void @llvm.dbg.value(metadata double %369, metadata !81, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double %357, metadata !93, metadata !DIExpression()), !dbg !75
  %147 = fmul double %118, %35, !dbg !146
  %148 = fmul double %107, %147, !dbg !147
  %149 = fsub double %9, %148, !dbg !147
  %150 = fmul double %147, %126, !dbg !148
  %151 = fsub double %48, %150, !dbg !148
  %152 = fmul double %147, %135, !dbg !140
  %153 = fsub double %75, %152, !dbg !140
  %154 = fmul double %147, %136, !dbg !141
  %155 = fsub double %85, %154, !dbg !141
  %156 = insertelement <2 x double> poison, double %149, i64 0, !dbg !149
  %157 = insertelement <2 x double> %156, double %147, i64 1, !dbg !149
  call void @llvm.dbg.value(metadata double %352, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double %464, metadata !81, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double undef, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double %461, metadata !93, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata double %455, metadata !93, metadata !DIExpression()), !dbg !75
  %158 = load double, ptr %22, align 8, !dbg !98, !tbaa !87
  %159 = load double, ptr %23, align 8, !dbg !99, !tbaa !87
  %160 = load <2 x double>, ptr %86, align 8, !dbg !125, !tbaa !87
  %161 = insertelement <2 x double> poison, double %87, i64 0, !dbg !150
  %162 = insertelement <2 x double> %161, double %1, i64 1, !dbg !150
  %163 = fsub <2 x double> %160, %162, !dbg !125
  %164 = fmul <2 x double> %160, %162, !dbg !125
  %165 = shufflevector <2 x double> %163, <2 x double> %164, <2 x i32> <i32 0, i32 3>, !dbg !125
  %166 = insertelement <2 x double> %165, double %11, i64 0, !dbg !99
  %167 = shufflevector <2 x double> %30, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !99
  %168 = fmul <2 x double> %166, %167, !dbg !98
  %169 = insertelement <2 x double> poison, double %158, i64 0, !dbg !99
  %170 = insertelement <2 x double> %169, double %159, i64 1, !dbg !99
  %171 = fsub <2 x double> %170, %168, !dbg !98
  %172 = load double, ptr %49, align 8, !dbg !108, !tbaa !87
  %173 = load double, ptr %50, align 8, !dbg !109, !tbaa !87
  %174 = shufflevector <2 x double> %30, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !109
  %175 = fmul <2 x double> %166, %174, !dbg !108
  %176 = insertelement <2 x double> poison, double %172, i64 0, !dbg !109
  %177 = insertelement <2 x double> %176, double %173, i64 1, !dbg !109
  %178 = fsub <2 x double> %177, %175, !dbg !108
  %179 = load double, ptr %64, align 8, !dbg !117, !tbaa !87
  %180 = load double, ptr %65, align 8, !dbg !118, !tbaa !87
  %181 = shufflevector <2 x double> %72, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !118
  %182 = fmul <2 x double> %166, %181, !dbg !117
  %183 = insertelement <2 x double> poison, double %179, i64 0, !dbg !118
  %184 = insertelement <2 x double> %183, double %180, i64 1, !dbg !118
  %185 = fsub <2 x double> %184, %182, !dbg !117
  %186 = fmul <2 x double> %165, %72, !dbg !126
  %187 = extractelement <2 x double> %186, i64 1, !dbg !126
  %188 = insertelement <2 x double> poison, double %118, i64 0, !dbg !151
  %189 = shufflevector <2 x double> %188, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !151
  %190 = fmul <2 x double> %189, %171, !dbg !152
  %191 = extractelement <2 x double> %190, i64 1, !dbg !153
  %192 = extractelement <2 x double> %190, i64 0, !dbg !154
  %193 = fmul double %107, %192, !dbg !154
  %194 = fsub double %11, %193, !dbg !154
  %195 = shufflevector <2 x double> %114, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !155
  %196 = fmul <2 x double> %190, %195, !dbg !156
  %197 = fsub <2 x double> %178, %196, !dbg !156
  %198 = shufflevector <2 x double> %116, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !157
  %199 = fmul <2 x double> %190, %198, !dbg !158
  %200 = fsub <2 x double> %185, %199, !dbg !158
  %201 = shufflevector <2 x double> %116, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !159
  %202 = shufflevector <2 x double> %201, <2 x double> %106, <2 x i32> <i32 0, i32 3>, !dbg !159
  %203 = fmul <2 x double> %190, %202, !dbg !160
  %204 = fsub <2 x double> %165, %203, !dbg !160
  %205 = insertelement <2 x double> poison, double %194, i64 0, !dbg !161
  %206 = shufflevector <2 x double> %205, <2 x double> %190, <2 x i32> <i32 0, i32 2>, !dbg !161
  %207 = load <2 x double>, ptr %88, align 8, !dbg !126, !tbaa !87
  %208 = insertelement <2 x double> poison, double %187, i64 0, !dbg !162
  %209 = insertelement <2 x double> %208, double %1, i64 1, !dbg !162
  %210 = fsub <2 x double> %207, %209, !dbg !126
  %211 = fmul <2 x double> %207, %209, !dbg !126
  %212 = shufflevector <2 x double> %210, <2 x double> %211, <2 x i32> <i32 0, i32 3>, !dbg !126
  %213 = extractelement <2 x double> %211, i64 1, !dbg !100
  %214 = fmul double %213, %83, !dbg !127
  %215 = shufflevector <2 x double> %190, <2 x double> %106, <2 x i32> <i32 1, i32 3>, !dbg !163
  %216 = load double, ptr %24, align 8, !dbg !100, !tbaa !87
  %217 = load double, ptr %25, align 8, !dbg !101, !tbaa !87
  %218 = load double, ptr %51, align 8, !dbg !110, !tbaa !87
  %219 = load double, ptr %52, align 8, !dbg !111, !tbaa !87
  %220 = load double, ptr %66, align 8, !dbg !119, !tbaa !87
  %221 = load double, ptr %67, align 8, !dbg !120, !tbaa !87
  %222 = load <2 x double>, ptr %89, align 8, !dbg !127, !tbaa !87
  %223 = insertelement <2 x double> poison, double %214, i64 0, !dbg !164
  %224 = insertelement <2 x double> %223, double %1, i64 1, !dbg !164
  %225 = fsub <2 x double> %222, %224, !dbg !127
  %226 = fmul <2 x double> %222, %224, !dbg !127
  %227 = shufflevector <2 x double> %225, <2 x double> %226, <2 x i32> <i32 0, i32 3>, !dbg !127
  %228 = fmul <2 x double> %227, %72, !dbg !128
  %229 = extractelement <2 x double> %228, i64 1, !dbg !128
  %230 = shufflevector <2 x double> %211, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !101
  %231 = shufflevector <2 x double> %230, <2 x double> %227, <2 x i32> <i32 0, i32 3>, !dbg !101
  %232 = fmul <2 x double> %231, %167, !dbg !100
  %233 = insertelement <2 x double> poison, double %216, i64 0, !dbg !101
  %234 = insertelement <2 x double> %233, double %217, i64 1, !dbg !101
  %235 = fsub <2 x double> %234, %232, !dbg !100
  %236 = fmul <2 x double> %189, %235, !dbg !165
  %237 = extractelement <2 x double> %236, i64 1, !dbg !166
  %238 = fmul <2 x double> %231, %174, !dbg !110
  %239 = insertelement <2 x double> poison, double %218, i64 0, !dbg !111
  %240 = insertelement <2 x double> %239, double %219, i64 1, !dbg !111
  %241 = fsub <2 x double> %240, %238, !dbg !110
  %242 = fmul <2 x double> %236, %195, !dbg !167
  %243 = fsub <2 x double> %241, %242, !dbg !167
  %244 = fmul <2 x double> %231, %181, !dbg !119
  %245 = insertelement <2 x double> poison, double %220, i64 0, !dbg !120
  %246 = insertelement <2 x double> %245, double %221, i64 1, !dbg !120
  %247 = fsub <2 x double> %246, %244, !dbg !119
  %248 = fmul <2 x double> %236, %198, !dbg !168
  %249 = fsub <2 x double> %247, %248, !dbg !168
  %250 = fmul <2 x double> %236, %202, !dbg !169
  %251 = fsub <2 x double> %227, %250, !dbg !169
  %252 = shufflevector <2 x double> %201, <2 x double> %236, <2 x i32> <i32 0, i32 2>, !dbg !163
  %253 = fmul <2 x double> %215, %252, !dbg !170
  %254 = fsub <2 x double> %212, %253, !dbg !170
  %255 = extractelement <2 x double> %236, i64 0, !dbg !171
  %256 = load <2 x double>, ptr %90, align 8, !dbg !128, !tbaa !87
  %257 = insertelement <2 x double> poison, double %229, i64 0, !dbg !172
  %258 = insertelement <2 x double> %257, double %1, i64 1, !dbg !172
  %259 = fsub <2 x double> %256, %258, !dbg !128
  %260 = fmul <2 x double> %256, %258, !dbg !128
  %261 = shufflevector <2 x double> %259, <2 x double> %260, <2 x i32> <i32 0, i32 3>, !dbg !128
  %262 = extractelement <2 x double> %260, i64 1, !dbg !102
  %263 = fmul double %262, %31, !dbg !102
  %264 = fsub double %27, %263, !dbg !102
  %265 = fmul double %262, %40, !dbg !112
  %266 = fsub double %54, %265, !dbg !112
  %267 = fmul double %262, %73, !dbg !121
  %268 = fsub double %69, %267, !dbg !121
  %269 = fmul double %262, %83, !dbg !129
  %270 = fsub double %92, %269, !dbg !129
  %271 = fmul double %118, %264, !dbg !173
  %272 = fmul double %271, %126, !dbg !174
  %273 = fsub double %266, %272, !dbg !174
  %274 = fmul double %271, %135, !dbg !175
  %275 = fsub double %268, %274, !dbg !175
  %276 = fmul double %271, %136, !dbg !176
  %277 = fsub double %270, %276, !dbg !176
  %278 = shufflevector <2 x double> %236, <2 x double> %106, <2 x i32> <i32 1, i32 3>, !dbg !177
  %279 = insertelement <2 x double> %201, double %271, i64 1, !dbg !177
  %280 = fmul <2 x double> %278, %279, !dbg !178
  %281 = fsub <2 x double> %261, %280, !dbg !178
  %282 = fmul double %118, %37, !dbg !179
  %283 = fmul double %107, %282, !dbg !180
  %284 = fsub double %13, %283, !dbg !180
  %285 = fmul double %282, %126, !dbg !137
  %286 = fsub double %58, %285, !dbg !137
  %287 = fmul double %282, %135, !dbg !181
  %288 = fsub double %77, %287, !dbg !181
  %289 = fmul double %282, %136, !dbg !182
  %290 = fsub double %96, %289, !dbg !182
  %291 = fmul double %118, %111, !dbg !183
  store double %291, ptr %16, align 8, !dbg !183, !tbaa !77
  %292 = fmul double %107, %291, !dbg !132
  %293 = fsub double %108, %292, !dbg !132
  store double %293, ptr %3, align 8, !dbg !132, !tbaa !77
  %294 = insertelement <2 x double> poison, double %291, i64 0, !dbg !139
  %295 = shufflevector <2 x double> %294, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !139
  %296 = fmul <2 x double> %295, %134, !dbg !184
  %297 = fsub <2 x double> %132, %296, !dbg !184
  store <2 x double> %297, ptr %39, align 8, !dbg !184, !tbaa !77
  %298 = extractelement <2 x double> %297, i64 0, !dbg !185
  %299 = fdiv double 1.000000e+00, %298, !dbg !185
  %300 = fmul double %299, %151, !dbg !186
  %301 = fmul double %299, %286, !dbg !187
  %302 = insertelement <2 x double> %137, double %293, i64 1, !dbg !142
  %303 = insertelement <2 x double> poison, double %293, i64 0, !dbg !149
  %304 = insertelement <2 x double> %303, double %291, i64 1, !dbg !149
  %305 = insertelement <2 x double> poison, double %300, i64 0, !dbg !149
  %306 = shufflevector <2 x double> %305, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !149
  %307 = fmul <2 x double> %304, %306, !dbg !188
  %308 = fsub <2 x double> %157, %307, !dbg !188
  %309 = insertelement <2 x double> poison, double %301, i64 0, !dbg !189
  %310 = shufflevector <2 x double> %309, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !189
  %311 = fmul <2 x double> %304, %310, !dbg !190
  %312 = insertelement <2 x double> poison, double %284, i64 0, !dbg !189
  %313 = insertelement <2 x double> %312, double %282, i64 1, !dbg !189
  %314 = fsub <2 x double> %313, %311, !dbg !190
  %315 = extractelement <2 x double> %297, i64 1, !dbg !191
  %316 = fmul double %300, %315, !dbg !192
  %317 = fsub double %153, %316, !dbg !192
  %318 = fmul double %301, %315, !dbg !191
  %319 = fsub double %288, %318, !dbg !191
  %320 = shufflevector <2 x double> %297, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !193
  %321 = insertelement <2 x double> poison, double %299, i64 0, !dbg !194
  %322 = shufflevector <2 x double> %321, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !194
  %323 = fmul <2 x double> %322, %197, !dbg !195
  %324 = fmul <2 x double> %321, %197, !dbg !161
  %325 = shufflevector <2 x double> %324, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !161
  %326 = fmul <2 x double> %304, %325, !dbg !196
  %327 = fsub <2 x double> %206, %326, !dbg !196
  %328 = extractelement <2 x double> %323, i64 1, !dbg !197
  %329 = fmul double %291, %328, !dbg !153
  %330 = fsub double %191, %329, !dbg !153
  %331 = shufflevector <2 x double> %297, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !198
  %332 = fmul <2 x double> %323, %331, !dbg !199
  %333 = fsub <2 x double> %200, %332, !dbg !199
  %334 = extractelement <2 x double> %323, i64 0, !dbg !200
  %335 = insertelement <2 x double> %323, double %330, i64 0, !dbg !197
  %336 = insertelement <2 x double> poison, double %328, i64 0, !dbg !201
  %337 = insertelement <2 x double> %336, double %293, i64 1, !dbg !201
  %338 = fmul <2 x double> %322, %243, !dbg !202
  %339 = extractelement <2 x double> %338, i64 1, !dbg !203
  %340 = fmul double %291, %339, !dbg !166
  %341 = fsub double %237, %340, !dbg !166
  %342 = fmul <2 x double> %338, %331, !dbg !204
  %343 = fsub <2 x double> %249, %342, !dbg !204
  %344 = extractelement <2 x double> %338, i64 0, !dbg !171
  %345 = fmul double %291, %344, !dbg !171
  %346 = fsub double %255, %345, !dbg !171
  %347 = insertelement <2 x double> poison, double %346, i64 0, !dbg !205
  %348 = shufflevector <2 x double> %347, <2 x double> %338, <2 x i32> <i32 0, i32 2>, !dbg !205
  %349 = insertelement <2 x double> %338, double %341, i64 0, !dbg !203
  %350 = insertelement <2 x double> poison, double %339, i64 0, !dbg !206
  %351 = insertelement <2 x double> %350, double %293, i64 1, !dbg !206
  %352 = fmul double %299, %128, !dbg !207
  store double %352, ptr %41, align 8, !dbg !207, !tbaa !77
  %353 = insertelement <2 x double> %294, double %352, i64 1, !dbg !142
  %354 = fmul <2 x double> %353, %302, !dbg !208
  %355 = fsub <2 x double> %125, %354, !dbg !208
  store <2 x double> %355, ptr %79, align 8, !dbg !208, !tbaa !77
  %356 = fmul double %291, %352, !dbg !209
  %357 = fsub double %119, %356, !dbg !209
  store double %357, ptr %18, align 8, !dbg !209, !tbaa !77
  %358 = extractelement <2 x double> %355, i64 0, !dbg !210
  %359 = insertelement <2 x double> poison, double %352, i64 0, !dbg !193
  %360 = shufflevector <2 x double> %359, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !193
  %361 = shufflevector <2 x double> %320, <2 x double> %355, <2 x i32> <i32 0, i32 2>, !dbg !193
  %362 = fmul <2 x double> %360, %361, !dbg !211
  %363 = fsub <2 x double> %146, %362, !dbg !211
  store <2 x double> %363, ptr %61, align 8, !dbg !211, !tbaa !77
  %364 = fmul double %300, %358, !dbg !212
  %365 = fsub double %155, %364, !dbg !212
  %366 = fmul double %301, %358, !dbg !210
  %367 = fsub double %290, %366, !dbg !210
  %368 = extractelement <2 x double> %363, i64 0, !dbg !213
  %369 = fdiv double 1.000000e+00, %368, !dbg !213
  %370 = extractelement <2 x double> %355, i64 1, !dbg !214
  %371 = insertelement <2 x double> poison, double %370, i64 0, !dbg !215
  %372 = insertelement <2 x double> %371, double %357, i64 1, !dbg !215
  %373 = extractelement <2 x double> %363, i64 1, !dbg !216
  %374 = shufflevector <2 x double> %355, <2 x double> undef, <2 x i32> <i32 0, i32 undef>, !dbg !217
  %375 = insertelement <2 x double> %374, double %293, i64 1, !dbg !217
  %376 = fmul <2 x double> %323, %375, !dbg !218
  %377 = fsub <2 x double> %204, %376, !dbg !218
  %378 = insertelement <2 x double> poison, double %369, i64 0, !dbg !219
  %379 = shufflevector <2 x double> %378, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !219
  %380 = fmul <2 x double> %379, %333, !dbg !220
  %381 = extractelement <2 x double> %380, i64 1, !dbg !221
  %382 = insertelement <2 x double> poison, double %357, i64 0, !dbg !197
  %383 = insertelement <2 x double> %382, double %352, i64 1, !dbg !197
  %384 = shufflevector <2 x double> %380, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !197
  %385 = shufflevector <2 x double> %380, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !197
  %386 = fmul <2 x double> %383, %385, !dbg !222
  %387 = fsub <2 x double> %335, %386, !dbg !222
  %388 = fmul <2 x double> %378, %333, !dbg !223
  %389 = shufflevector <2 x double> %388, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !223
  %390 = fmul <2 x double> %372, %389, !dbg !224
  %391 = fsub <2 x double> %327, %390, !dbg !224
  %392 = extractelement <2 x double> %380, i64 0, !dbg !200
  %393 = fmul double %352, %392, !dbg !200
  %394 = fsub double %334, %393, !dbg !200
  %395 = shufflevector <2 x double> %363, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !225
  %396 = shufflevector <2 x double> %395, <2 x double> %355, <2 x i32> <i32 0, i32 3>, !dbg !225
  %397 = fmul <2 x double> %380, %396, !dbg !226
  %398 = fsub <2 x double> %377, %397, !dbg !226
  %399 = shufflevector <2 x double> %384, <2 x double> %355, <2 x i32> <i32 0, i32 3>, !dbg !227
  %400 = fmul <2 x double> %379, %343, !dbg !228
  %401 = extractelement <2 x double> %400, i64 1, !dbg !229
  %402 = shufflevector <2 x double> %400, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !203
  %403 = shufflevector <2 x double> %400, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !203
  %404 = fmul <2 x double> %383, %403, !dbg !230
  %405 = fsub <2 x double> %349, %404, !dbg !230
  %406 = fmul <2 x double> %338, %375, !dbg !231
  %407 = fsub <2 x double> %251, %406, !dbg !231
  %408 = fmul <2 x double> %378, %343, !dbg !205
  %409 = shufflevector <2 x double> %408, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !205
  %410 = fmul <2 x double> %383, %409, !dbg !232
  %411 = fsub <2 x double> %348, %410, !dbg !232
  %412 = fmul <2 x double> %400, %396, !dbg !233
  %413 = fsub <2 x double> %407, %412, !dbg !233
  %414 = shufflevector <2 x double> %355, <2 x double> %338, <2 x i32> <i32 0, i32 2>, !dbg !201
  %415 = fmul <2 x double> %337, %414, !dbg !234
  %416 = fsub <2 x double> %254, %415, !dbg !234
  %417 = shufflevector <2 x double> %395, <2 x double> %400, <2 x i32> <i32 0, i32 2>, !dbg !227
  %418 = fmul <2 x double> %399, %417, !dbg !235
  %419 = fsub <2 x double> %416, %418, !dbg !235
  %420 = fmul double %299, %273, !dbg !236
  %421 = fmul double %291, %420, !dbg !237
  %422 = fsub double %271, %421, !dbg !237
  %423 = fmul double %420, %315, !dbg !238
  %424 = fsub double %275, %423, !dbg !238
  %425 = fmul double %420, %358, !dbg !239
  %426 = fsub double %277, %425, !dbg !239
  %427 = fmul double %369, %424, !dbg !240
  %428 = insertelement <2 x double> poison, double %427, i64 0, !dbg !241
  %429 = shufflevector <2 x double> %428, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !241
  %430 = fmul <2 x double> %383, %429, !dbg !242
  %431 = insertelement <2 x double> poison, double %422, i64 0, !dbg !241
  %432 = insertelement <2 x double> %431, double %420, i64 1, !dbg !241
  %433 = fsub <2 x double> %432, %430, !dbg !242
  %434 = fmul double %427, %373, !dbg !243
  %435 = fsub double %426, %434, !dbg !243
  %436 = insertelement <2 x double> %374, double %420, i64 1, !dbg !206
  %437 = fmul <2 x double> %351, %436, !dbg !244
  %438 = fsub <2 x double> %281, %437, !dbg !244
  %439 = shufflevector <2 x double> %402, <2 x double> %355, <2 x i32> <i32 0, i32 3>, !dbg !245
  %440 = insertelement <2 x double> %395, double %427, i64 1, !dbg !245
  %441 = fmul <2 x double> %439, %440, !dbg !246
  %442 = fsub <2 x double> %438, %441, !dbg !246
  %443 = insertelement <2 x double> poison, double %394, i64 0, !dbg !247
  %444 = shufflevector <2 x double> %443, <2 x double> %380, <2 x i32> <i32 0, i32 2>, !dbg !247
  %445 = extractelement <2 x double> %400, i64 0, !dbg !248
  %446 = fmul double %369, %319, !dbg !249
  %447 = insertelement <2 x double> poison, double %446, i64 0, !dbg !250
  %448 = shufflevector <2 x double> %447, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !250
  %449 = fmul <2 x double> %372, %448, !dbg !214
  %450 = fsub <2 x double> %314, %449, !dbg !214
  %451 = fmul double %352, %446, !dbg !251
  %452 = fsub double %301, %451, !dbg !251
  %453 = fmul double %446, %373, !dbg !216
  %454 = fsub double %367, %453, !dbg !216
  %455 = fmul double %369, %317, !dbg !252
  store double %455, ptr %62, align 8, !dbg !252, !tbaa !77
  %456 = insertelement <2 x double> poison, double %455, i64 0, !dbg !215
  %457 = shufflevector <2 x double> %456, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !215
  %458 = fmul <2 x double> %372, %457, !dbg !253
  %459 = fsub <2 x double> %308, %458, !dbg !253
  store <2 x double> %459, ptr %7, align 8, !dbg !253, !tbaa !77
  %460 = fmul double %352, %455, !dbg !254
  %461 = fsub double %300, %460, !dbg !254
  store double %461, ptr %45, align 8, !dbg !254, !tbaa !77
  %462 = fmul double %455, %373, !dbg !255
  %463 = fsub double %365, %462, !dbg !255
  store double %463, ptr %81, align 8, !dbg !255, !tbaa !77
  %464 = fdiv double 1.000000e+00, %463, !dbg !256
  %465 = fmul double %464, %435, !dbg !257
  store double %465, ptr %91, align 8, !dbg !257, !tbaa !87
  %466 = fmul double %464, %454, !dbg !258
  store double %466, ptr %93, align 8, !dbg !258, !tbaa !90
  %467 = extractelement <2 x double> %459, i64 0, !dbg !259
  %468 = fmul double %467, %465, !dbg !259
  %469 = insertelement <2 x double> poison, double %464, i64 0, !dbg !259
  %470 = insertelement <2 x double> %469, double %468, i64 1, !dbg !259
  %471 = fmul <2 x double> %442, %470, !dbg !260
  %472 = fsub <2 x double> %442, %470, !dbg !260
  %473 = shufflevector <2 x double> %471, <2 x double> %472, <2 x i32> <i32 0, i32 3>, !dbg !260
  %474 = extractelement <2 x double> %471, i64 0, !dbg !229
  %475 = fmul <2 x double> %459, %473, !dbg !261
  %476 = shufflevector <2 x double> %469, <2 x double> %475, <2 x i32> <i32 0, i32 2>, !dbg !261
  %477 = fmul <2 x double> %413, %476, !dbg !262
  %478 = fsub <2 x double> %413, %476, !dbg !262
  %479 = shufflevector <2 x double> %477, <2 x double> %478, <2 x i32> <i32 0, i32 3>, !dbg !262
  %480 = extractelement <2 x double> %477, i64 0, !dbg !248
  %481 = fmul <2 x double> %459, %479, !dbg !263
  %482 = shufflevector <2 x double> %469, <2 x double> %481, <2 x i32> <i32 0, i32 2>, !dbg !263
  %483 = fmul <2 x double> %419, %482, !dbg !264
  %484 = fsub <2 x double> %419, %482, !dbg !264
  %485 = shufflevector <2 x double> %483, <2 x double> %484, <2 x i32> <i32 0, i32 3>, !dbg !264
  %486 = extractelement <2 x double> %483, i64 0, !dbg !221
  %487 = fmul <2 x double> %459, %485, !dbg !265
  %488 = shufflevector <2 x double> %469, <2 x double> %487, <2 x i32> <i32 0, i32 2>, !dbg !265
  %489 = fmul <2 x double> %398, %488, !dbg !266
  %490 = fsub <2 x double> %398, %488, !dbg !266
  %491 = shufflevector <2 x double> %489, <2 x double> %490, <2 x i32> <i32 0, i32 3>, !dbg !266
  store <2 x double> %491, ptr %86, align 8, !dbg !266, !tbaa !87
  store <2 x double> %485, ptr %88, align 8, !dbg !264, !tbaa !87
  store <2 x double> %479, ptr %89, align 8, !dbg !262, !tbaa !87
  store <2 x double> %473, ptr %90, align 8, !dbg !260, !tbaa !87
  %492 = shufflevector <2 x double> %489, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !267
  %493 = fmul <2 x double> %459, %492, !dbg !268
  %494 = fsub <2 x double> %391, %493, !dbg !268
  store <2 x double> %494, ptr %c, align 8, !dbg !268, !tbaa !87
  %495 = insertelement <2 x double> poison, double %466, i64 0, !dbg !269
  %496 = shufflevector <2 x double> %495, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !269
  %497 = fmul <2 x double> %459, %496, !dbg !270
  %498 = fsub <2 x double> %450, %497, !dbg !270
  store <2 x double> %498, ptr %r, align 8, !dbg !270, !tbaa !90
  %499 = shufflevector <2 x double> %459, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !271
  %500 = insertelement <2 x double> %499, double %461, i64 1, !dbg !271
  %501 = shufflevector <2 x double> %483, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !271
  %502 = fmul <2 x double> %500, %501, !dbg !272
  %503 = fsub <2 x double> %387, %502, !dbg !272
  store <2 x double> %503, ptr %23, align 8, !dbg !272, !tbaa !87
  %504 = shufflevector <2 x double> %477, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !273
  %505 = fmul <2 x double> %500, %504, !dbg !274
  %506 = fsub <2 x double> %411, %505, !dbg !274
  store <2 x double> %506, ptr %24, align 8, !dbg !274, !tbaa !87
  %507 = shufflevector <2 x double> %471, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !275
  %508 = fmul <2 x double> %500, %507, !dbg !276
  %509 = fsub <2 x double> %405, %508, !dbg !276
  store <2 x double> %509, ptr %25, align 8, !dbg !276, !tbaa !87
  %510 = insertelement <2 x double> poison, double %465, i64 0, !dbg !277
  %511 = shufflevector <2 x double> %510, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !277
  %512 = fmul <2 x double> %500, %511, !dbg !278
  %513 = fsub <2 x double> %433, %512, !dbg !278
  store <2 x double> %513, ptr %26, align 8, !dbg !278, !tbaa !87
  %514 = insertelement <2 x double> poison, double %461, i64 0, !dbg !247
  %515 = insertelement <2 x double> %514, double %455, i64 1, !dbg !247
  %516 = fmul <2 x double> %515, %492, !dbg !279
  %517 = fsub <2 x double> %444, %516, !dbg !279
  store <2 x double> %517, ptr %49, align 8, !dbg !279, !tbaa !87
  %518 = fmul double %455, %486, !dbg !221
  %519 = fsub double %381, %518, !dbg !221
  store double %519, ptr %65, align 8, !dbg !221, !tbaa !87
  %520 = fmul double %455, %480, !dbg !248
  %521 = fsub double %445, %520, !dbg !248
  store double %521, ptr %66, align 8, !dbg !248, !tbaa !87
  %522 = fmul double %455, %474, !dbg !229
  %523 = fsub double %401, %522, !dbg !229
  store double %523, ptr %67, align 8, !dbg !229, !tbaa !87
  %524 = fmul double %455, %465, !dbg !280
  %525 = fsub double %427, %524, !dbg !280
  store double %525, ptr %68, align 8, !dbg !280, !tbaa !87
  %526 = fmul <2 x double> %515, %496, !dbg !281
  %527 = insertelement <2 x double> poison, double %452, i64 0, !dbg !282
  %528 = insertelement <2 x double> %527, double %446, i64 1, !dbg !282
  %529 = fsub <2 x double> %528, %526, !dbg !281
  store <2 x double> %529, ptr %55, align 8, !dbg !281, !tbaa !90
  ret void, !dbg !283
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define void @binvrhs_(ptr %lhs, ptr nocapture %r) local_unnamed_addr #0 !dbg !284 {
L.entry:
  call void @llvm.dbg.declare(metadata ptr %lhs, metadata !288, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.declare(metadata ptr %r, metadata !289, metadata !DIExpression()), !dbg !290
  %0 = load double, ptr %lhs, align 8, !dbg !291, !tbaa !292
  %1 = fdiv double 1.000000e+00, %0, !dbg !291
  call void @llvm.dbg.value(metadata double %1, metadata !296, metadata !DIExpression()), !dbg !290
  %2 = getelementptr i8, ptr %lhs, i64 40, !dbg !297
  %3 = getelementptr i8, ptr %lhs, i64 80, !dbg !298
  %4 = getelementptr i8, ptr %lhs, i64 120, !dbg !299
  %5 = load double, ptr %4, align 8, !dbg !299, !tbaa !292
  %6 = fmul double %1, %5, !dbg !299
  %7 = getelementptr i8, ptr %lhs, i64 160, !dbg !300
  %8 = getelementptr i8, ptr %lhs, i64 8, !dbg !301
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  %9 = getelementptr i8, ptr %lhs, i64 48, !dbg !303
  %10 = getelementptr i8, ptr %lhs, i64 88, !dbg !304
  %11 = load double, ptr %10, align 8, !dbg !304, !tbaa !292
  %12 = getelementptr i8, ptr %lhs, i64 128, !dbg !305
  %13 = load double, ptr %12, align 8, !dbg !305, !tbaa !292
  %14 = getelementptr i8, ptr %lhs, i64 168, !dbg !306
  %15 = getelementptr i8, ptr %r, i64 8, !dbg !307
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  %16 = load <2 x double>, ptr %8, align 8, !dbg !301, !tbaa !292
  %17 = extractelement <2 x double> %16, i64 0, !dbg !307
  %18 = fmul double %6, %17, !dbg !305
  %19 = fsub double %13, %18, !dbg !305
  %20 = load <2 x double>, ptr %9, align 8, !dbg !303, !tbaa !292
  %21 = getelementptr i8, ptr %lhs, i64 96, !dbg !308
  %22 = extractelement <2 x double> %16, i64 1, !dbg !309
  %23 = getelementptr i8, ptr %lhs, i64 136, !dbg !310
  %24 = load double, ptr %23, align 8, !dbg !310, !tbaa !292
  %25 = fmul double %6, %22, !dbg !310
  %26 = fsub double %24, %25, !dbg !310
  %27 = getelementptr i8, ptr %lhs, i64 176, !dbg !311
  %28 = getelementptr i8, ptr %r, i64 16, !dbg !309
  %29 = getelementptr i8, ptr %lhs, i64 24, !dbg !312
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  %30 = getelementptr i8, ptr %lhs, i64 64, !dbg !313
  %31 = getelementptr i8, ptr %lhs, i64 144, !dbg !314
  %32 = getelementptr i8, ptr %lhs, i64 184, !dbg !315
  %33 = getelementptr i8, ptr %r, i64 24, !dbg !316
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  %34 = load <2 x double>, ptr %29, align 8, !dbg !312, !tbaa !292
  %35 = load <2 x double>, ptr %30, align 8, !dbg !313, !tbaa !292
  %36 = getelementptr i8, ptr %lhs, i64 112, !dbg !317
  %37 = load double, ptr %36, align 8, !dbg !317, !tbaa !292
  %38 = getelementptr i8, ptr %lhs, i64 192, !dbg !318
  %39 = getelementptr i8, ptr %r, i64 32, !dbg !319
  call void @llvm.dbg.value(metadata double %61, metadata !296, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  %40 = load <2 x double>, ptr %21, align 8, !dbg !308, !tbaa !292
  %41 = shufflevector <2 x double> %16, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !320
  %42 = shufflevector <2 x double> %41, <2 x double> %34, <2 x i32> <i32 0, i32 2>, !dbg !320
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double %96, metadata !296, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double %90, metadata !302, metadata !DIExpression()), !dbg !290
  %43 = load double, ptr %2, align 8, !dbg !297, !tbaa !292
  %44 = load double, ptr %3, align 8, !dbg !298, !tbaa !292
  %45 = insertelement <2 x double> poison, double %1, i64 0, !dbg !297
  %46 = shufflevector <2 x double> %45, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !297
  %47 = insertelement <2 x double> poison, double %44, i64 0, !dbg !297
  %48 = insertelement <2 x double> %47, double %43, i64 1, !dbg !297
  %49 = fmul <2 x double> %46, %48, !dbg !298
  %50 = extractelement <2 x double> %49, i64 1, !dbg !321
  store double %50, ptr %2, align 8, !dbg !297, !tbaa !292
  %51 = extractelement <2 x double> %49, i64 0, !dbg !304
  %52 = fmul <2 x double> %49, %16, !dbg !304
  %53 = extractelement <2 x double> %52, i64 0, !dbg !304
  %54 = fsub double %11, %53, !dbg !304
  %55 = shufflevector <2 x double> %49, <2 x double> poison, <2 x i32> <i32 1, i32 1>, !dbg !322
  %56 = fmul <2 x double> %55, %16, !dbg !303
  %57 = fsub <2 x double> %20, %56, !dbg !303
  store <2 x double> %57, ptr %9, align 8, !dbg !303, !tbaa !292
  %58 = fmul <2 x double> %55, %34, !dbg !313
  %59 = fsub <2 x double> %35, %58, !dbg !313
  store <2 x double> %59, ptr %30, align 8, !dbg !313, !tbaa !292
  %60 = extractelement <2 x double> %57, i64 0, !dbg !323
  %61 = fdiv double 1.000000e+00, %60, !dbg !323
  %62 = fmul double %61, %19, !dbg !324
  %63 = shufflevector <2 x double> %34, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !325
  %64 = insertelement <2 x double> %63, double %62, i64 1, !dbg !325
  %65 = fmul <2 x double> %49, %64, !dbg !317
  %66 = insertelement <2 x double> poison, double %37, i64 0, !dbg !325
  %67 = insertelement <2 x double> %66, double %6, i64 1, !dbg !325
  %68 = fsub <2 x double> %67, %65, !dbg !317
  %69 = extractelement <2 x double> %57, i64 1, !dbg !326
  %70 = fmul double %62, %69, !dbg !327
  %71 = fsub double %26, %70, !dbg !327
  %72 = fmul <2 x double> %45, %48, !dbg !320
  %73 = shufflevector <2 x double> %72, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !320
  %74 = fmul <2 x double> %73, %42, !dbg !308
  %75 = fsub <2 x double> %40, %74, !dbg !308
  %76 = shufflevector <2 x double> %57, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !328
  %77 = shufflevector <2 x double> %76, <2 x double> %59, <2 x i32> <i32 0, i32 2>, !dbg !328
  %78 = shufflevector <2 x double> %59, <2 x double> poison, <2 x i32> <i32 1, i32 undef>, !dbg !329
  call void @llvm.dbg.value(metadata double %88, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  %79 = load <2 x double>, ptr %31, align 8, !dbg !314, !tbaa !292
  %80 = insertelement <2 x double> poison, double %6, i64 0, !dbg !330
  %81 = shufflevector <2 x double> %80, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !330
  %82 = fmul <2 x double> %81, %34, !dbg !314
  %83 = fsub <2 x double> %79, %82, !dbg !314
  %84 = insertelement <2 x double> poison, double %62, i64 0, !dbg !331
  %85 = shufflevector <2 x double> %84, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !331
  %86 = fmul <2 x double> %85, %59, !dbg !332
  %87 = fsub <2 x double> %83, %86, !dbg !332
  call void @llvm.dbg.value(metadata double %113, metadata !296, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double %103, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double %97, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double %210, metadata !296, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  %88 = fmul double %61, %54, !dbg !333
  store double %88, ptr %10, align 8, !dbg !333, !tbaa !292
  %89 = fmul double %50, %88, !dbg !321
  %90 = fsub double %51, %89, !dbg !321
  store double %90, ptr %3, align 8, !dbg !321, !tbaa !292
  %91 = insertelement <2 x double> poison, double %88, i64 0, !dbg !328
  %92 = shufflevector <2 x double> %91, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !328
  %93 = fmul <2 x double> %92, %77, !dbg !334
  %94 = fsub <2 x double> %75, %93, !dbg !334
  store <2 x double> %94, ptr %21, align 8, !dbg !334, !tbaa !292
  %95 = extractelement <2 x double> %94, i64 0, !dbg !335
  %96 = fdiv double 1.000000e+00, %95, !dbg !335
  %97 = fmul double %96, %71, !dbg !336
  store double %97, ptr %23, align 8, !dbg !336, !tbaa !292
  %98 = insertelement <2 x double> %91, double %97, i64 1, !dbg !329
  %99 = insertelement <2 x double> %78, double %90, i64 1, !dbg !329
  %100 = fmul <2 x double> %98, %99, !dbg !337
  %101 = fsub <2 x double> %68, %100, !dbg !337
  store <2 x double> %101, ptr %36, align 8, !dbg !337, !tbaa !292
  %102 = fmul double %88, %97, !dbg !338
  %103 = fsub double %62, %102, !dbg !338
  store double %103, ptr %12, align 8, !dbg !338, !tbaa !292
  %104 = insertelement <2 x double> poison, double %90, i64 0, !dbg !339
  %105 = insertelement <2 x double> %104, double %88, i64 1, !dbg !339
  %106 = insertelement <2 x double> poison, double %97, i64 0, !dbg !340
  %107 = shufflevector <2 x double> %106, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !340
  %108 = shufflevector <2 x double> %94, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !340
  %109 = shufflevector <2 x double> %108, <2 x double> %101, <2 x i32> <i32 0, i32 2>, !dbg !340
  %110 = fmul <2 x double> %107, %109, !dbg !341
  %111 = fsub <2 x double> %87, %110, !dbg !341
  store <2 x double> %111, ptr %31, align 8, !dbg !341, !tbaa !292
  %112 = extractelement <2 x double> %111, i64 0, !dbg !342
  %113 = fdiv double 1.000000e+00, %112, !dbg !342
  %114 = extractelement <2 x double> %101, i64 1, !dbg !343
  %115 = insertelement <2 x double> poison, double %114, i64 0, !dbg !344
  %116 = insertelement <2 x double> %115, double %103, i64 1, !dbg !344
  call void @llvm.dbg.value(metadata double %201, metadata !302, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata double undef, metadata !302, metadata !DIExpression()), !dbg !290
  %117 = load double, ptr %7, align 8, !dbg !300, !tbaa !292
  %118 = load double, ptr %r, align 8, !dbg !345, !tbaa !346
  %119 = insertelement <2 x double> poison, double %117, i64 0, !dbg !345
  %120 = insertelement <2 x double> %119, double %118, i64 1, !dbg !345
  %121 = fmul <2 x double> %46, %120, !dbg !300
  %122 = load double, ptr %14, align 8, !dbg !306, !tbaa !292
  %123 = load double, ptr %15, align 8, !dbg !307, !tbaa !346
  %124 = shufflevector <2 x double> %16, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !307
  %125 = fmul <2 x double> %121, %124, !dbg !306
  %126 = insertelement <2 x double> poison, double %122, i64 0, !dbg !307
  %127 = insertelement <2 x double> %126, double %123, i64 1, !dbg !307
  %128 = fsub <2 x double> %127, %125, !dbg !306
  %129 = load double, ptr %27, align 8, !dbg !311, !tbaa !292
  %130 = load double, ptr %28, align 8, !dbg !309, !tbaa !346
  %131 = shufflevector <2 x double> %16, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !309
  %132 = fmul <2 x double> %121, %131, !dbg !311
  %133 = insertelement <2 x double> poison, double %129, i64 0, !dbg !309
  %134 = insertelement <2 x double> %133, double %130, i64 1, !dbg !309
  %135 = fsub <2 x double> %134, %132, !dbg !311
  %136 = load double, ptr %32, align 8, !dbg !315, !tbaa !292
  %137 = load double, ptr %33, align 8, !dbg !316, !tbaa !346
  %138 = shufflevector <2 x double> %34, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !316
  %139 = fmul <2 x double> %121, %138, !dbg !315
  %140 = insertelement <2 x double> poison, double %136, i64 0, !dbg !316
  %141 = insertelement <2 x double> %140, double %137, i64 1, !dbg !316
  %142 = fsub <2 x double> %141, %139, !dbg !315
  %143 = load double, ptr %38, align 8, !dbg !318, !tbaa !292
  %144 = load double, ptr %39, align 8, !dbg !319, !tbaa !346
  %145 = shufflevector <2 x double> %34, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !319
  %146 = fmul <2 x double> %121, %145, !dbg !318
  %147 = insertelement <2 x double> poison, double %143, i64 0, !dbg !319
  %148 = insertelement <2 x double> %147, double %144, i64 1, !dbg !319
  %149 = fsub <2 x double> %148, %146, !dbg !318
  %150 = insertelement <2 x double> poison, double %61, i64 0, !dbg !348
  %151 = shufflevector <2 x double> %150, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !348
  %152 = fmul <2 x double> %151, %128, !dbg !349
  %153 = extractelement <2 x double> %152, i64 0, !dbg !350
  %154 = fmul double %50, %153, !dbg !350
  %155 = extractelement <2 x double> %121, i64 0, !dbg !350
  %156 = fsub double %155, %154, !dbg !350
  %157 = insertelement <2 x double> poison, double %156, i64 0, !dbg !339
  %158 = shufflevector <2 x double> %157, <2 x double> %152, <2 x i32> <i32 0, i32 2>, !dbg !339
  %159 = fmul <2 x double> %49, %152, !dbg !351
  %160 = fsub <2 x double> %121, %159, !dbg !351
  %161 = shufflevector <2 x double> %57, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !326
  %162 = fmul <2 x double> %152, %161, !dbg !352
  %163 = fsub <2 x double> %135, %162, !dbg !352
  %164 = shufflevector <2 x double> %59, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !353
  %165 = fmul <2 x double> %152, %164, !dbg !354
  %166 = fsub <2 x double> %142, %165, !dbg !354
  %167 = shufflevector <2 x double> %59, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !355
  %168 = fmul <2 x double> %152, %167, !dbg !356
  %169 = fsub <2 x double> %149, %168, !dbg !356
  %170 = insertelement <2 x double> poison, double %96, i64 0, !dbg !357
  %171 = shufflevector <2 x double> %170, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !357
  %172 = fmul <2 x double> %171, %163, !dbg !358
  %173 = fmul <2 x double> %170, %163, !dbg !339
  %174 = shufflevector <2 x double> %173, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !339
  %175 = fmul <2 x double> %105, %174, !dbg !359
  %176 = fsub <2 x double> %158, %175, !dbg !359
  %177 = shufflevector <2 x double> %172, <2 x double> poison, <2 x i32> <i32 1, i32 1>, !dbg !360
  %178 = fmul <2 x double> %105, %177, !dbg !361
  %179 = shufflevector <2 x double> %160, <2 x double> undef, <2 x i32> <i32 1, i32 undef>, !dbg !360
  %180 = shufflevector <2 x double> %179, <2 x double> %152, <2 x i32> <i32 0, i32 3>, !dbg !360
  %181 = fsub <2 x double> %180, %178, !dbg !361
  %182 = shufflevector <2 x double> %94, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !362
  %183 = fmul <2 x double> %172, %182, !dbg !363
  %184 = fsub <2 x double> %166, %183, !dbg !363
  %185 = shufflevector <2 x double> %101, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !364
  %186 = fmul <2 x double> %172, %185, !dbg !365
  %187 = fsub <2 x double> %169, %186, !dbg !365
  %188 = insertelement <2 x double> poison, double %113, i64 0, !dbg !366
  %189 = shufflevector <2 x double> %188, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !366
  %190 = fmul <2 x double> %189, %184, !dbg !367
  %191 = extractelement <2 x double> %190, i64 0, !dbg !368
  store double %191, ptr %32, align 8, !dbg !367, !tbaa !292
  %192 = fmul <2 x double> %188, %184, !dbg !344
  %193 = shufflevector <2 x double> %192, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !344
  %194 = fmul <2 x double> %116, %193, !dbg !369
  %195 = fsub <2 x double> %176, %194, !dbg !369
  store <2 x double> %195, ptr %7, align 8, !dbg !369, !tbaa !292
  %196 = shufflevector <2 x double> %190, <2 x double> poison, <2 x i32> <i32 1, i32 1>, !dbg !370
  %197 = fmul <2 x double> %116, %196, !dbg !343
  %198 = fsub <2 x double> %181, %197, !dbg !343
  %199 = fmul double %97, %191, !dbg !368
  %200 = extractelement <2 x double> %172, i64 0, !dbg !368
  %201 = fsub double %200, %199, !dbg !368
  store double %201, ptr %27, align 8, !dbg !368, !tbaa !292
  %202 = extractelement <2 x double> %190, i64 1, !dbg !371
  %203 = fmul double %97, %202, !dbg !371
  %204 = extractelement <2 x double> %172, i64 1, !dbg !371
  %205 = fsub double %204, %203, !dbg !371
  %206 = shufflevector <2 x double> %111, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !372
  %207 = fmul <2 x double> %190, %206, !dbg !373
  %208 = fsub <2 x double> %187, %207, !dbg !373
  %209 = extractelement <2 x double> %208, i64 0, !dbg !374
  store double %209, ptr %38, align 8, !dbg !373, !tbaa !292
  %210 = fdiv double 1.000000e+00, %209, !dbg !374
  %211 = extractelement <2 x double> %208, i64 1, !dbg !375
  %212 = fmul double %210, %211, !dbg !375
  store double %212, ptr %39, align 8, !dbg !375, !tbaa !346
  %213 = insertelement <2 x double> poison, double %212, i64 0, !dbg !376
  %214 = shufflevector <2 x double> %213, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !376
  %215 = fmul <2 x double> %195, %214, !dbg !377
  %216 = fsub <2 x double> %198, %215, !dbg !377
  store <2 x double> %216, ptr %r, align 8, !dbg !377, !tbaa !346
  %217 = insertelement <2 x double> poison, double %201, i64 0, !dbg !378
  %218 = shufflevector <2 x double> %217, <2 x double> %190, <2 x i32> <i32 0, i32 2>, !dbg !378
  %219 = fmul <2 x double> %218, %214, !dbg !379
  %220 = insertelement <2 x double> %190, double %205, i64 0, !dbg !378
  %221 = fsub <2 x double> %220, %219, !dbg !379
  store <2 x double> %221, ptr %28, align 8, !dbg !379, !tbaa !346
  ret void, !dbg !380
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) "fp-contract"="fast" "no-frame-pointer-elim-non-leaf" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Dwarf Version", i32 4}
!1 = !{i32 2, !"Debug Info Version", i32 3}
!2 = distinct !DICompileUnit(language: DW_LANG_Fortran90, file: !3, producer: " F90 Flang - 1.5 2017-05-01", isOptimized: true, flags: "'+flang -S -emit-llvm -Xclang -disable-O0-optnone -c -O3 -g -DSOLVER_FENCE -DEXCHG_FENCE -cpp solve_subs.f90 -I/cvmfs/software.hpc.rwth.de/Linux/RH8/x86_64/intel/sapphirerapids/software/impi/2021.9.0-intel-compilers-2023.1.0/mpi/2021.9.0/include/f90-flang -I/cvmfs/software.hpc.rwth.de/Linux/RH8/x86_64/intel/sapphirerapids/software/impi/2021.9.0-intel-compilers-2023.1.0/mpi/2021.9.0/include'", runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !4, globals: !4, imports: !4, nameTableKind: None)
!3 = !DIFile(filename: "solve_subs.f90", directory: "/rwthfs/rz/cluster/home/ss540294/research/RMA_Codes/jube/benchmarks/BT-RMA/BT-RMA.benchmarks/000135/000001_copy_source/work/BT-RMA")
!4 = !{}
!5 = distinct !DISubprogram(name: "matvec_sub", scope: !2, file: !3, line: 5, type: !6, scopeLine: 5, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14)
!6 = !DISubroutineType(types: !7)
!7 = !{null, !8, !12, !12}
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 1600, align: 64, elements: !10)
!9 = !DIBasicType(name: "double precision", size: 64, align: 64, encoding: DW_ATE_float)
!10 = !{!11, !11}
!11 = !DISubrange(lowerBound: 1, upperBound: 5)
!12 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 320, align: 64, elements: !13)
!13 = !{!11}
!14 = !{!15, !16, !17}
!15 = !DILocalVariable(name: "ablock", arg: 1, scope: !5, file: !3, line: 5, type: !8)
!16 = !DILocalVariable(name: "avec", arg: 2, scope: !5, file: !3, line: 5, type: !12)
!17 = !DILocalVariable(name: "bvec", arg: 3, scope: !5, file: !3, line: 5, type: !12)
!18 = !DILocation(line: 0, scope: !5)
!19 = !DILocation(line: 23, column: 1, scope: !5)
!20 = !{!21, !21, i64 0}
!21 = !{!"t1.2", !22, i64 0}
!22 = !{!"unlimited ptr", !23, i64 0}
!23 = !{!"Flang FAA 1"}
!24 = !{!25, !25, i64 0}
!25 = !{!"t1.11", !22, i64 0}
!26 = !{!27, !27, i64 0}
!27 = !{!"t1.5", !22, i64 0}
!28 = !DILocation(line: 28, column: 1, scope: !5)
!29 = !DILocation(line: 33, column: 1, scope: !5)
!30 = !DILocation(line: 43, column: 1, scope: !5)
!31 = !DILocation(line: 51, column: 1, scope: !5)
!32 = distinct !DISubprogram(name: "matmul_sub", scope: !2, file: !3, line: 56, type: !6, scopeLine: 56, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !33)
!33 = !{!34, !35, !36}
!34 = !DILocalVariable(name: "ablock", arg: 1, scope: !32, file: !3, line: 56, type: !8)
!35 = !DILocalVariable(name: "bblock", arg: 2, scope: !32, file: !3, line: 56, type: !8)
!36 = !DILocalVariable(name: "cblock", arg: 3, scope: !32, file: !3, line: 56, type: !8)
!37 = !DILocation(line: 0, scope: !32)
!38 = !DILocation(line: 71, column: 1, scope: !32)
!39 = !{!40, !40, i64 0}
!40 = !{!"t2.16", !41, i64 0}
!41 = !{!"unlimited ptr", !42, i64 0}
!42 = !{!"Flang FAA 2"}
!43 = !{!44, !44, i64 0}
!44 = !{!"t2.6", !41, i64 0}
!45 = !DILocation(line: 81, column: 1, scope: !32)
!46 = !DILocation(line: 91, column: 1, scope: !32)
!47 = !DILocation(line: 96, column: 1, scope: !32)
!48 = !{!49, !49, i64 0}
!49 = !{!"t2.2", !41, i64 0}
!50 = !DILocation(line: 76, column: 1, scope: !32)
!51 = !DILocation(line: 101, column: 1, scope: !32)
!52 = !DILocation(line: 106, column: 1, scope: !32)
!53 = !DILocation(line: 111, column: 1, scope: !32)
!54 = !DILocation(line: 116, column: 1, scope: !32)
!55 = !DILocation(line: 121, column: 1, scope: !32)
!56 = !DILocation(line: 131, column: 1, scope: !32)
!57 = !DILocation(line: 141, column: 1, scope: !32)
!58 = !DILocation(line: 146, column: 1, scope: !32)
!59 = !DILocation(line: 126, column: 1, scope: !32)
!60 = !DILocation(line: 151, column: 1, scope: !32)
!61 = !DILocation(line: 156, column: 1, scope: !32)
!62 = !DILocation(line: 161, column: 1, scope: !32)
!63 = !DILocation(line: 171, column: 1, scope: !32)
!64 = !DILocation(line: 176, column: 1, scope: !32)
!65 = !DILocation(line: 181, column: 1, scope: !32)
!66 = !DILocation(line: 191, column: 1, scope: !32)
!67 = !DILocation(line: 199, column: 1, scope: !32)
!68 = distinct !DISubprogram(name: "binvcrhs", scope: !2, file: !3, line: 206, type: !69, scopeLine: 206, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !71)
!69 = !DISubroutineType(types: !70)
!70 = !{null, !8, !8, !8}
!71 = !{!72, !73, !74}
!72 = !DILocalVariable(name: "lhs", arg: 1, scope: !68, file: !3, line: 206, type: !8)
!73 = !DILocalVariable(name: "c", arg: 2, scope: !68, file: !3, line: 206, type: !8)
!74 = !DILocalVariable(name: "r", arg: 3, scope: !68, file: !3, line: 206, type: !12)
!75 = !DILocation(line: 0, scope: !68)
!76 = !DILocation(line: 225, column: 1, scope: !68)
!77 = !{!78, !78, i64 0}
!78 = !{!"t3.2", !79, i64 0}
!79 = !{!"unlimited ptr", !80, i64 0}
!80 = !{!"Flang FAA 3"}
!81 = !DILocalVariable(name: "pivot", scope: !68, file: !3, type: !9)
!82 = !DILocation(line: 226, column: 1, scope: !68)
!83 = !DILocation(line: 227, column: 1, scope: !68)
!84 = !DILocation(line: 228, column: 1, scope: !68)
!85 = !DILocation(line: 229, column: 1, scope: !68)
!86 = !DILocation(line: 230, column: 1, scope: !68)
!87 = !{!88, !88, i64 0}
!88 = !{!"t3.b", !79, i64 0}
!89 = !DILocation(line: 235, column: 1, scope: !68)
!90 = !{!91, !91, i64 0}
!91 = !{!"t3.13", !79, i64 0}
!92 = !DILocation(line: 237, column: 1, scope: !68)
!93 = !DILocalVariable(name: "coeff", scope: !68, file: !3, type: !9)
!94 = !DILocation(line: 238, column: 1, scope: !68)
!95 = !DILocation(line: 239, column: 1, scope: !68)
!96 = !DILocation(line: 240, column: 1, scope: !68)
!97 = !DILocation(line: 241, column: 1, scope: !68)
!98 = !DILocation(line: 242, column: 1, scope: !68)
!99 = !DILocation(line: 243, column: 1, scope: !68)
!100 = !DILocation(line: 244, column: 1, scope: !68)
!101 = !DILocation(line: 245, column: 1, scope: !68)
!102 = !DILocation(line: 246, column: 1, scope: !68)
!103 = !DILocation(line: 247, column: 1, scope: !68)
!104 = !DILocation(line: 251, column: 1, scope: !68)
!105 = !DILocation(line: 259, column: 1, scope: !68)
!106 = !DILocation(line: 252, column: 1, scope: !68)
!107 = !DILocation(line: 253, column: 1, scope: !68)
!108 = !DILocation(line: 254, column: 1, scope: !68)
!109 = !DILocation(line: 255, column: 1, scope: !68)
!110 = !DILocation(line: 256, column: 1, scope: !68)
!111 = !DILocation(line: 257, column: 1, scope: !68)
!112 = !DILocation(line: 258, column: 1, scope: !68)
!113 = !DILocation(line: 261, column: 1, scope: !68)
!114 = !DILocation(line: 262, column: 1, scope: !68)
!115 = !DILocation(line: 264, column: 1, scope: !68)
!116 = !DILocation(line: 265, column: 1, scope: !68)
!117 = !DILocation(line: 266, column: 1, scope: !68)
!118 = !DILocation(line: 267, column: 1, scope: !68)
!119 = !DILocation(line: 268, column: 1, scope: !68)
!120 = !DILocation(line: 269, column: 1, scope: !68)
!121 = !DILocation(line: 270, column: 1, scope: !68)
!122 = !DILocation(line: 271, column: 1, scope: !68)
!123 = !DILocation(line: 275, column: 1, scope: !68)
!124 = !DILocation(line: 277, column: 1, scope: !68)
!125 = !DILocation(line: 278, column: 1, scope: !68)
!126 = !DILocation(line: 279, column: 1, scope: !68)
!127 = !DILocation(line: 280, column: 1, scope: !68)
!128 = !DILocation(line: 281, column: 1, scope: !68)
!129 = !DILocation(line: 282, column: 1, scope: !68)
!130 = !DILocation(line: 283, column: 1, scope: !68)
!131 = !DILocation(line: 263, column: 1, scope: !68)
!132 = !DILocation(line: 298, column: 1, scope: !68)
!133 = !DILocation(line: 250, column: 1, scope: !68)
!134 = !DILocation(line: 286, column: 1, scope: !68)
!135 = !DILocation(line: 288, column: 1, scope: !68)
!136 = !DILocation(line: 299, column: 1, scope: !68)
!137 = !DILocation(line: 317, column: 1, scope: !68)
!138 = !DILocation(line: 310, column: 1, scope: !68)
!139 = !DILocation(line: 320, column: 1, scope: !68)
!140 = !DILocation(line: 322, column: 1, scope: !68)
!141 = !DILocation(line: 333, column: 1, scope: !68)
!142 = !DILocation(line: 353, column: 1, scope: !68)
!143 = !DILocation(line: 276, column: 1, scope: !68)
!144 = !DILocation(line: 332, column: 1, scope: !68)
!145 = !DILocation(line: 321, column: 1, scope: !68)
!146 = !DILocation(line: 289, column: 1, scope: !68)
!147 = !DILocation(line: 300, column: 1, scope: !68)
!148 = !DILocation(line: 311, column: 1, scope: !68)
!149 = !DILocation(line: 364, column: 1, scope: !68)
!150 = !DILocation(line: 231, column: 1, scope: !68)
!151 = !DILocation(line: 291, column: 1, scope: !68)
!152 = !DILocation(line: 290, column: 1, scope: !68)
!153 = !DILocation(line: 366, column: 1, scope: !68)
!154 = !DILocation(line: 301, column: 1, scope: !68)
!155 = !DILocation(line: 313, column: 1, scope: !68)
!156 = !DILocation(line: 312, column: 1, scope: !68)
!157 = !DILocation(line: 324, column: 1, scope: !68)
!158 = !DILocation(line: 323, column: 1, scope: !68)
!159 = !DILocation(line: 302, column: 1, scope: !68)
!160 = !DILocation(line: 334, column: 1, scope: !68)
!161 = !DILocation(line: 365, column: 1, scope: !68)
!162 = !DILocation(line: 232, column: 1, scope: !68)
!163 = !DILocation(line: 303, column: 1, scope: !68)
!164 = !DILocation(line: 233, column: 1, scope: !68)
!165 = !DILocation(line: 292, column: 1, scope: !68)
!166 = !DILocation(line: 368, column: 1, scope: !68)
!167 = !DILocation(line: 314, column: 1, scope: !68)
!168 = !DILocation(line: 325, column: 1, scope: !68)
!169 = !DILocation(line: 336, column: 1, scope: !68)
!170 = !DILocation(line: 335, column: 1, scope: !68)
!171 = !DILocation(line: 367, column: 1, scope: !68)
!172 = !DILocation(line: 234, column: 1, scope: !68)
!173 = !DILocation(line: 294, column: 1, scope: !68)
!174 = !DILocation(line: 316, column: 1, scope: !68)
!175 = !DILocation(line: 327, column: 1, scope: !68)
!176 = !DILocation(line: 338, column: 1, scope: !68)
!177 = !DILocation(line: 305, column: 1, scope: !68)
!178 = !DILocation(line: 337, column: 1, scope: !68)
!179 = !DILocation(line: 295, column: 1, scope: !68)
!180 = !DILocation(line: 306, column: 1, scope: !68)
!181 = !DILocation(line: 328, column: 1, scope: !68)
!182 = !DILocation(line: 339, column: 1, scope: !68)
!183 = !DILocation(line: 287, column: 1, scope: !68)
!184 = !DILocation(line: 309, column: 1, scope: !68)
!185 = !DILocation(line: 342, column: 1, scope: !68)
!186 = !DILocation(line: 344, column: 1, scope: !68)
!187 = !DILocation(line: 350, column: 1, scope: !68)
!188 = !DILocation(line: 354, column: 1, scope: !68)
!189 = !DILocation(line: 370, column: 1, scope: !68)
!190 = !DILocation(line: 360, column: 1, scope: !68)
!191 = !DILocation(line: 380, column: 1, scope: !68)
!192 = !DILocation(line: 374, column: 1, scope: !68)
!193 = !DILocation(line: 383, column: 1, scope: !68)
!194 = !DILocation(line: 346, column: 1, scope: !68)
!195 = !DILocation(line: 345, column: 1, scope: !68)
!196 = !DILocation(line: 355, column: 1, scope: !68)
!197 = !DILocation(line: 423, column: 1, scope: !68)
!198 = !DILocation(line: 376, column: 1, scope: !68)
!199 = !DILocation(line: 375, column: 1, scope: !68)
!200 = !DILocation(line: 422, column: 1, scope: !68)
!201 = !DILocation(line: 357, column: 1, scope: !68)
!202 = !DILocation(line: 347, column: 1, scope: !68)
!203 = !DILocation(line: 425, column: 1, scope: !68)
!204 = !DILocation(line: 377, column: 1, scope: !68)
!205 = !DILocation(line: 424, column: 1, scope: !68)
!206 = !DILocation(line: 359, column: 1, scope: !68)
!207 = !DILocation(line: 343, column: 1, scope: !68)
!208 = !DILocation(line: 331, column: 1, scope: !68)
!209 = !DILocation(line: 363, column: 1, scope: !68)
!210 = !DILocation(line: 390, column: 1, scope: !68)
!211 = !DILocation(line: 373, column: 1, scope: !68)
!212 = !DILocation(line: 384, column: 1, scope: !68)
!213 = !DILocation(line: 393, column: 1, scope: !68)
!214 = !DILocation(line: 409, column: 1, scope: !68)
!215 = !DILocation(line: 412, column: 1, scope: !68)
!216 = !DILocation(line: 436, column: 1, scope: !68)
!217 = !DILocation(line: 356, column: 1, scope: !68)
!218 = !DILocation(line: 385, column: 1, scope: !68)
!219 = !DILocation(line: 396, column: 1, scope: !68)
!220 = !DILocation(line: 395, column: 1, scope: !68)
!221 = !DILocation(line: 473, column: 1, scope: !68)
!222 = !DILocation(line: 414, column: 1, scope: !68)
!223 = !DILocation(line: 413, column: 1, scope: !68)
!224 = !DILocation(line: 404, column: 1, scope: !68)
!225 = !DILocation(line: 405, column: 1, scope: !68)
!226 = !DILocation(line: 431, column: 1, scope: !68)
!227 = !DILocation(line: 406, column: 1, scope: !68)
!228 = !DILocation(line: 397, column: 1, scope: !68)
!229 = !DILocation(line: 475, column: 1, scope: !68)
!230 = !DILocation(line: 416, column: 1, scope: !68)
!231 = !DILocation(line: 387, column: 1, scope: !68)
!232 = !DILocation(line: 415, column: 1, scope: !68)
!233 = !DILocation(line: 433, column: 1, scope: !68)
!234 = !DILocation(line: 386, column: 1, scope: !68)
!235 = !DILocation(line: 432, column: 1, scope: !68)
!236 = !DILocation(line: 349, column: 1, scope: !68)
!237 = !DILocation(line: 369, column: 1, scope: !68)
!238 = !DILocation(line: 379, column: 1, scope: !68)
!239 = !DILocation(line: 389, column: 1, scope: !68)
!240 = !DILocation(line: 399, column: 1, scope: !68)
!241 = !DILocation(line: 426, column: 1, scope: !68)
!242 = !DILocation(line: 417, column: 1, scope: !68)
!243 = !DILocation(line: 435, column: 1, scope: !68)
!244 = !DILocation(line: 388, column: 1, scope: !68)
!245 = !DILocation(line: 408, column: 1, scope: !68)
!246 = !DILocation(line: 434, column: 1, scope: !68)
!247 = !DILocation(line: 472, column: 1, scope: !68)
!248 = !DILocation(line: 474, column: 1, scope: !68)
!249 = !DILocation(line: 400, column: 1, scope: !68)
!250 = !DILocation(line: 418, column: 1, scope: !68)
!251 = !DILocation(line: 427, column: 1, scope: !68)
!252 = !DILocation(line: 394, column: 1, scope: !68)
!253 = !DILocation(line: 403, column: 1, scope: !68)
!254 = !DILocation(line: 421, column: 1, scope: !68)
!255 = !DILocation(line: 430, column: 1, scope: !68)
!256 = !DILocation(line: 439, column: 1, scope: !68)
!257 = !DILocation(line: 444, column: 1, scope: !68)
!258 = !DILocation(line: 445, column: 1, scope: !68)
!259 = !DILocation(line: 452, column: 1, scope: !68)
!260 = !DILocation(line: 443, column: 1, scope: !68)
!261 = !DILocation(line: 451, column: 1, scope: !68)
!262 = !DILocation(line: 442, column: 1, scope: !68)
!263 = !DILocation(line: 450, column: 1, scope: !68)
!264 = !DILocation(line: 441, column: 1, scope: !68)
!265 = !DILocation(line: 449, column: 1, scope: !68)
!266 = !DILocation(line: 440, column: 1, scope: !68)
!267 = !DILocation(line: 456, column: 1, scope: !68)
!268 = !DILocation(line: 448, column: 1, scope: !68)
!269 = !DILocation(line: 461, column: 1, scope: !68)
!270 = !DILocation(line: 453, column: 1, scope: !68)
!271 = !DILocation(line: 465, column: 1, scope: !68)
!272 = !DILocation(line: 457, column: 1, scope: !68)
!273 = !DILocation(line: 466, column: 1, scope: !68)
!274 = !DILocation(line: 458, column: 1, scope: !68)
!275 = !DILocation(line: 467, column: 1, scope: !68)
!276 = !DILocation(line: 459, column: 1, scope: !68)
!277 = !DILocation(line: 468, column: 1, scope: !68)
!278 = !DILocation(line: 460, column: 1, scope: !68)
!279 = !DILocation(line: 464, column: 1, scope: !68)
!280 = !DILocation(line: 476, column: 1, scope: !68)
!281 = !DILocation(line: 469, column: 1, scope: !68)
!282 = !DILocation(line: 477, column: 1, scope: !68)
!283 = !DILocation(line: 481, column: 1, scope: !68)
!284 = distinct !DISubprogram(name: "binvrhs", scope: !2, file: !3, line: 488, type: !285, scopeLine: 488, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !287)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !8, !8}
!287 = !{!288, !289}
!288 = !DILocalVariable(name: "lhs", arg: 1, scope: !284, file: !3, line: 488, type: !8)
!289 = !DILocalVariable(name: "r", arg: 2, scope: !284, file: !3, line: 488, type: !12)
!290 = !DILocation(line: 0, scope: !284)
!291 = !DILocation(line: 508, column: 1, scope: !284)
!292 = !{!293, !293, i64 0}
!293 = !{!"t4.2", !294, i64 0}
!294 = !{!"unlimited ptr", !295, i64 0}
!295 = !{!"Flang FAA 4"}
!296 = !DILocalVariable(name: "pivot", scope: !284, file: !3, type: !9)
!297 = !DILocation(line: 509, column: 1, scope: !284)
!298 = !DILocation(line: 510, column: 1, scope: !284)
!299 = !DILocation(line: 511, column: 1, scope: !284)
!300 = !DILocation(line: 512, column: 1, scope: !284)
!301 = !DILocation(line: 515, column: 1, scope: !284)
!302 = !DILocalVariable(name: "coeff", scope: !284, file: !3, type: !9)
!303 = !DILocation(line: 516, column: 1, scope: !284)
!304 = !DILocation(line: 517, column: 1, scope: !284)
!305 = !DILocation(line: 518, column: 1, scope: !284)
!306 = !DILocation(line: 519, column: 1, scope: !284)
!307 = !DILocation(line: 520, column: 1, scope: !284)
!308 = !DILocation(line: 524, column: 1, scope: !284)
!309 = !DILocation(line: 527, column: 1, scope: !284)
!310 = !DILocation(line: 525, column: 1, scope: !284)
!311 = !DILocation(line: 526, column: 1, scope: !284)
!312 = !DILocation(line: 529, column: 1, scope: !284)
!313 = !DILocation(line: 530, column: 1, scope: !284)
!314 = !DILocation(line: 532, column: 1, scope: !284)
!315 = !DILocation(line: 533, column: 1, scope: !284)
!316 = !DILocation(line: 534, column: 1, scope: !284)
!317 = !DILocation(line: 538, column: 1, scope: !284)
!318 = !DILocation(line: 540, column: 1, scope: !284)
!319 = !DILocation(line: 541, column: 1, scope: !284)
!320 = !DILocation(line: 531, column: 1, scope: !284)
!321 = !DILocation(line: 551, column: 1, scope: !284)
!322 = !DILocation(line: 523, column: 1, scope: !284)
!323 = !DILocation(line: 544, column: 1, scope: !284)
!324 = !DILocation(line: 546, column: 1, scope: !284)
!325 = !DILocation(line: 552, column: 1, scope: !284)
!326 = !DILocation(line: 560, column: 1, scope: !284)
!327 = !DILocation(line: 558, column: 1, scope: !284)
!328 = !DILocation(line: 563, column: 1, scope: !284)
!329 = !DILocation(line: 581, column: 1, scope: !284)
!330 = !DILocation(line: 539, column: 1, scope: !284)
!331 = !DILocation(line: 570, column: 1, scope: !284)
!332 = !DILocation(line: 564, column: 1, scope: !284)
!333 = !DILocation(line: 545, column: 1, scope: !284)
!334 = !DILocation(line: 557, column: 1, scope: !284)
!335 = !DILocation(line: 575, column: 1, scope: !284)
!336 = !DILocation(line: 576, column: 1, scope: !284)
!337 = !DILocation(line: 569, column: 1, scope: !284)
!338 = !DILocation(line: 586, column: 1, scope: !284)
!339 = !DILocation(line: 587, column: 1, scope: !284)
!340 = !DILocation(line: 596, column: 1, scope: !284)
!341 = !DILocation(line: 591, column: 1, scope: !284)
!342 = !DILocation(line: 601, column: 1, scope: !284)
!343 = !DILocation(line: 607, column: 1, scope: !284)
!344 = !DILocation(line: 610, column: 1, scope: !284)
!345 = !DILocation(line: 513, column: 1, scope: !284)
!346 = !{!347, !347, i64 0}
!347 = !{!"t4.b", !294, i64 0}
!348 = !DILocation(line: 548, column: 1, scope: !284)
!349 = !DILocation(line: 547, column: 1, scope: !284)
!350 = !DILocation(line: 553, column: 1, scope: !284)
!351 = !DILocation(line: 554, column: 1, scope: !284)
!352 = !DILocation(line: 559, column: 1, scope: !284)
!353 = !DILocation(line: 566, column: 1, scope: !284)
!354 = !DILocation(line: 565, column: 1, scope: !284)
!355 = !DILocation(line: 572, column: 1, scope: !284)
!356 = !DILocation(line: 571, column: 1, scope: !284)
!357 = !DILocation(line: 578, column: 1, scope: !284)
!358 = !DILocation(line: 577, column: 1, scope: !284)
!359 = !DILocation(line: 582, column: 1, scope: !284)
!360 = !DILocation(line: 588, column: 1, scope: !284)
!361 = !DILocation(line: 583, column: 1, scope: !284)
!362 = !DILocation(line: 593, column: 1, scope: !284)
!363 = !DILocation(line: 592, column: 1, scope: !284)
!364 = !DILocation(line: 598, column: 1, scope: !284)
!365 = !DILocation(line: 597, column: 1, scope: !284)
!366 = !DILocation(line: 603, column: 1, scope: !284)
!367 = !DILocation(line: 602, column: 1, scope: !284)
!368 = !DILocation(line: 614, column: 1, scope: !284)
!369 = !DILocation(line: 606, column: 1, scope: !284)
!370 = !DILocation(line: 611, column: 1, scope: !284)
!371 = !DILocation(line: 615, column: 1, scope: !284)
!372 = !DILocation(line: 619, column: 1, scope: !284)
!373 = !DILocation(line: 618, column: 1, scope: !284)
!374 = !DILocation(line: 622, column: 1, scope: !284)
!375 = !DILocation(line: 623, column: 1, scope: !284)
!376 = !DILocation(line: 629, column: 1, scope: !284)
!377 = !DILocation(line: 626, column: 1, scope: !284)
!378 = !DILocation(line: 635, column: 1, scope: !284)
!379 = !DILocation(line: 632, column: 1, scope: !284)
!380 = !DILocation(line: 639, column: 1, scope: !284)
