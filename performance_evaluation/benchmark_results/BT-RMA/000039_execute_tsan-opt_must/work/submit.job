#!/bin/bash -x
#SBATCH --job-name="BT-RMA_must_tsan-opt_39"
#SBATCH --mail-user=
#SBATCH --mail-type=NONE
#SBATCH --nodes=1
#SBATCH --ntasks=36
#SBATCH --cpus-per-task=2
#SBATCH --time=00:40:00
#SBATCH --output=job.out
#SBATCH --error=job.err
#SBATCH --partition=c23ms
#SBATCH --gres=NONE
#SBATCH --account=rwth1269
#SBATCH --exclusive
#SBATCH --exclude="i23m[0001-0030]"
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}

export OMP_NUM_THREADS="1"
export time_output_file="/rwthfs/rz/cluster/home/ss540294/research/RMA_Codes/jube/benchmarks/BT-RMA/BT-RMA.benchmarks/000135/000006_compile_tsan-opt/work/time.out"
export TSAN_OPTIONS="$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout"


echo "nodelist=$SLURM_JOB_NODELIST"     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for modulename in  intel/2023a  Classic-Flang/16.0.4-c23-impi CMake/3.26.3 CMake/3.26.3; do module load $modulename; done;
          for item in  MPICH_CC=clang MPICH_CXX=clang++ ${openmp_export} PATH=//rwthfs/rz/cluster/home/ss540294/research/RMA_Codes/jube/benchmarks/BT-RMA/../../dep/MUST/03a904395d5e72851ce8749967ec7ed3/install/bin:$PATH; do export "$item"; done;

JUBE_ERR_CODE=$?
if [ $JUBE_ERR_CODE -ne 0 ]; then
    touch error
    exit $JUBE_ERR_CODE
fi

 mustrun  --must:output stdout --must:mpiexec srun --must:rma-only -n 36 --must:rma-mode shadow -- compile/bt-rma.C.x.tsan-opt.0aa933f5470e25e7c55184c012b43e51 

JUBE_ERR_CODE=$?
if [ $JUBE_ERR_CODE -ne 0 ]; then
    touch error
    exit $JUBE_ERR_CODE
fi

printf "EXECUTION VERIFICATION CHECK: ";if grep -q "\[MUST-REPORT\] Error.*race" job.out || grep -q "^srun: error:" job.err; then echo "FAILURE"; else echo "SUCCESS"; fi

JUBE_ERR_CODE=$?
if [ $JUBE_ERR_CODE -ne 0 ]; then
    touch error
    exit $JUBE_ERR_CODE
fi

touch ready
