<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE jube [
  <!ENTITY iterations "5"> <!-- - - - - - - - - - - number of times the exectuion step should be repeated -->
]>
<jube>  
  <include-path>
    <path>../../common</path>
    <path>../../platform/CLAIX-23</path>
  </include-path>

  <benchmark name="miniVite" outpath="miniVite.benchmarks">     
    <!-- 
      #miniVite Configuration 
    -->     
    <parameterset name="config">
      <!-- <parameter name="num_vertices" type="int">5500000</parameter> Only valid for synthetically generated inputs. Pass total number of vertices of the generated graph.! -->
      <parameter name="num_vertices" type="int" mode="python">4000000</parameter>
    </parameterset>
    <!-- 
      source directory 
    -->  
    <parameterset name="source"  init_with="defaults.xml">
      <parameter name="path_to_source" type="string">${jube_benchmark_home}/miniVite</parameter> <!-- - - - - - - - - - -  Path to the source folder       -->      
    </parameterset> 
    <!-- 
      #Fetching system settings       
      #Here you can add or change parameters to fit this specific benchmark
    -->
    <parameterset name="platform_specs_pset" init_with="system_settings.xml">
      <parameter name="application_tasks" type="int">32</parameter>          <!-- - - - - - - - - - - - - - - - -  Total number of tasks (power of 2)  -->
      <parameter name="taskspernode" type="int">48</parameter> <!-- - - - - - - - - - - - - - - - -  Tasks per node           -->
      <parameter name="threads" type="int">1</parameter>       <!-- - - - - - - - - - - - - - - - -  Threads                -->
      <parameter name="args_exec">-f /hpcwork/rwth1269/nlpkkt240.bin</parameter> 
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!">tasks ($tasks) need to be a power of 2 (2^N), e.g., 1, 2, 4, 8, 16, etc.</parameter>
      <parameter name="ERROR_tasks" mode="python">
      print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if not __import__("math").log2($tasks).is_integer() else 'OK'
      </parameter>
    </parameterset>    
    <parameterset name="execute_pset" init_with="system_settings.xml"></parameterset>  
    <parameterset name="toolchain_env_pset" init_with="system_settings.xml">
        <!-- <parameter name="compiler_name">clang</parameter>      - - - - - - - - - - - - - - - -  Compiler               -->
        <!-- <parameter name="compiler_version">13.0.1</parameter>  - - - - - - - - - - - - - - - -  Compiler Version       -->
        <!-- <parameter name="mpi_name">intelmpi</parameter>        - - - - - - - - - - - - - - - -  MPI                    -->
        <!-- <parameter name="mpi_version">2022a</parameter>        - - - - - - - - - - - - - - - -  MPI Version            -->
    </parameterset>
    <parameterset name="compile_pset" init_with="system_settings.xml">
      <parameter name="RMA_target" type="string"></parameter>  <!-- - - - - - - - - - - - - - - - -  RMA targets              -->  
      <parameter name="executable_name">miniVite</parameter> <!-- - - - - - - - - - -  Name of the executable       -->
      <parameter name="compile_preparation" type="string">:</parameter> <!-- - - - - - - -  commands that have to be executed before compilation -->
    </parameterset>
    <parameterset name="module_env_pset" init_with="system_settings.xml"></parameterset>
    <parameterset name="mpirun_env_pset" init_with="system_settings.xml"></parameterset>
    <parameterset name="export_env_pset" init_with="system_settings.xml"></parameterset>
   
    <!-- Regex patternsets -->
    <patternset name="pattern" init_with="defaults.xml:pattern">
      <pattern name="time" type="float">Average total time \(in s\), #Processes\: $jube_pat_fp, $jube_pat_nint</pattern>
      <pattern name="mods" type="float">MODS \(final modularity \* average time\)\: $jube_pat_fp</pattern>
    </patternset>

    <!-- Load filesets -->
    <fileset name="source_files" init_with="system_settings.xml"></fileset>
    <fileset name="job_files" init_with="system_settings.xml"></fileset> <!-- Slurm -->

    <!-- Load substituteset -->
    <substituteset name="job_sub" init_with="system_settings.xml"></substituteset> <!-- Slurm -->

    <!-- Load steps -->
    <include from="must.xml" path="step" /> <!-- Must -->
    <include from="defaults.xml" path="step" />
    <!-- Compile step -->
    <step name="compile" depend="copy_source" suffix="${compile_mode}">
      <include from="defaults.xml" path="compile_psets/use" />
      <do active="${do_compile}">
        cd copy_source/;
        ${load_modules}; 
        ${export}; 
        ${compile_export};
        ${compile_preparation};
        make clean;
        ${time_measure_command} make VERBOSE=ON CXX="${MPICXX}" OPTFLAGS="-O3 -fopenmp -DPRINT_DIST_STATS -DUSE_MPI_RMA";
        mv ${executable_name} ${executable_full_name};

        mkdir -p ${benchmark_build_dir};
        mv -f ${executable_full_name} ${benchmark_build_dir};
      </do>
      <do>
        cp -f ${benchmark_build_dir}/${executable_full_name} .;
      </do>
    </step>


    <!-- Execute step -->
    <step name="execute" depend="compile" suffix="${compile_mode}_${measurement_mode}" iterations="&iterations;" active="not ${ignorelist}">
      <include from="defaults.xml" path="execute_psets/use" />
      <do done_file="${done_file}" error_file="${error_file}">
        if [[ "$ERROR_tasks" == "ERR" ]]; then &gt;&amp;2 echo "$ERROR_tasks_msg"; exit 1; fi
        $submit $submit_script
      </do>
    </step> 
    <!-- Load analyser -->
    <include from="defaults.xml" path="analyser"/>

    <!-- 
      #Create result table 
    -->
    <result>
      <use>analyse</use>
      <table name="result_csv" style="csv" separator=";" sort="tasks,compile_mode,measurement_mode,jube_wp_id">
        <include from="defaults.xml" path="columns/column"/>
        <column>time_avg</column>
        <column>time_std</column>
        <column>mods</column>
        <column title="memory total (MiB)" tag="memusage">memory_total</column>
        <column>verification</column>
      </table>
      <table name="result" style="pretty" sort="tasks,compile_mode,measurement_mode,jube_wp_id">        
        <include from="defaults.xml" path="columns/column"/>
        <column format=".3f">time_avg</column>
        <column format=".3f">time_std</column>
        <column format=".3f">mods</column>
        <column title="memory total (MiB)" tag="memusage">memory_total</column>
        <column>verification</column>
      </table>
    </result>
    
    <!-- Use additional features -->
    <include from="includes.xml" path="includes/include"/>
  </benchmark>
</jube>
